- id: kcd-cz-sk-2023-opensource-kubernetes-stack
  title: "Slides z  Open Source Kubernetes Stack"
  date: 19. 5. 2023
  ad: kubernetes
  tags:
    - kubernetes
    - kcd
  perex: |
    Slides z me prednasky o Open Source Kubernetes Stacku na Kubernetes Community Days Czech & Slovak 2023
  content: |
    Slides z me prednasky o Open Source Kubernetes Stacku na Kubernetes Community Days Czech & Slovak 2023

    - Google Slides - <https://docs.google.com/presentation/d/1jidM_zr-lt6w6hNV1ysHAkGQkYzBduEKqmmmtrKwb5Y/edit>
    - PDF - <https://raw.githubusercontent.com/ondrejsika/slides/master/2023-05-19/2023-05-19_KCD_CZ_SK_2023_OpenSource_Kubernetes_Stack.pdf>

- id: tergum-v0.30.0
  title: "Tergum v0.30.0: Zalohovani Vaultu"
  date: 29. 7. 2022
  ad: vault
  tags:
    - tergum
    - tooling
    - go
    - devops
    - vault
  release:
    project: tergum
    version: v0.30.0
  perex: |
    Tergum nove podporuje zalohovani Hashicorp Vaultu.
  content: |
    Posledni novinkou je moznost zalohovat Vault primo z Tergumu diky novemu Vault backup open-source.

    Konfigurace je jednoducha, staci pouze adresa vaultu a token, ktery muze backup provest.

    Idelni je si ve Vaultu udelat uzivatele s touto policy

    ```
    path "sys/storage/raft/snapshot" {
      capabilities = ["read"]
    }
    ```

    Pak static vytvorit konfiguracni soubor `tergum.yml`

    ```
    Meta:
      SchemaVersion: 3
    Backups:
      - ID: vault
        Source:
          Vault:
            Addr: https://vault.company.com
            Token: xxx
        Targets:
          - ID: file
            FilePath:
              Path: ./tergum-backup.snap
    ```

    A pustit Tergum

    ```
    tergum backup --config tergum.yml
    ```

    ### Odkazy

    - https://github.com/sikalabs/tergum
    - https://github.com/sikalabs/tergum/releases/tag/v0.30.0
    - https://twitter.com/tergumbackup

- id: slu-v0.16.0
  title: "slu v0.16.0: Mail, Random & Git IF Utils"
  date: 20. 9. 2021
  ad: kubernetes
  tags:
    - tooling
    - go
    - devops
    - slu
  perex: |
    Verze v0.16.0 naseho toolu `slu` je venku a zde jsou novinky co prinasi.
  content: |
    Novinky v `slu` v0.16.0 jsou:

    - Posilani mailu (prez SMTP server) z terminalu
    - Generovani nahodnych stringu
    - IF tooling for Git

    ## Posilani emailu

    Ukazka poslani emailu z CLI prez SMTP server

    ```
    slu mail send -H mail.acme.com -P 587 \
      -f alice@acme.com -p alicepwd \
      -t bob@acme.com \
      -s Hello \
      -m "Hello Bob, this is Alice."
    ```

    ## Generovani nahodnych stringu

    Pro generovani se pouziva PRG (pseudo random generator) ktery ma seed z unix microseconds.

    ```
    ondrej@sika-mac-air:~$ slu random string
    3tb3xgaqueg69dfj
    ondrej@sika-mac-air:~$ slu random string --length 20
    z95ka4j0f3bx6l85nlu9
    ```

    ## Git IF

    Pridal jsem tooling pro jedoduche podminkovani v shellu. Vychazi to z koncepce:

    ```
    ondrej@sika-mac-air:~$ true && echo true || echo false ; echo $?
    true
    0
    ondrej@sika-mac-air:~$ false && echo true || echo false ; echo $?
    false
    0
    ```

    Pokud mam nejake soubory pripravene ke commitu, tak muzu pouzit

    ```
    slu git if staged && git commit -m "Message ..." || echo nothing to commit
    ```

    Mam to pouzite napriklad zde: https://github.com/ondrejsika/www/commit/2882159c883aac79a9275c3f55c5c4c51f89af74

    ## Release na Githubu

    https://github.com/sikalabs/slu/releases/tag/v0.16.0

- id: slu
  title: "slu: Tool, ktery mi zjednodusuje praci"
  date: 4. 9. 2021
  ad: kubernetes
  tags:
    - tooling
    - go
    - devops
    - slu
  perex: |
    Kazdy resime nejake rutijni tasky, ktere si chceme nejak zjednodusit. Kazdy to dela jinak, nekdo pouziva aliasy, nekdo si pise tooling v bash scriptech a nekdo treba Python. Nech utilitek je vetsinou hodne a jsou hodne ruznorode. Ja jsem se po nejakem case michani bash aliasu, Bash a Python skriptu jsem se rozhodl pro prepsani do jednoho Go toolu a nelituji.
  content: |
    Kazdy resime nejake rutijni tasky, ktere si chceme nejak zjednodusit. Kazdy to dela jinak, nekdo pouziva aliasy, nekdo si pise tooling v bash scriptech a nekdo treba Python. Nech utilitek je vetsinou hodne a jsou hodne ruznorode. Ja jsem se po nejakem case michani bash aliasu, Bash a Python skriptu jsem se rozhodl pro prepsani do jednoho Go toolu a nelituji.

    Kdyz jsem se rozhodoval ze napisu tool, bylo jasne ze to bude open source a ze chci aby to mohlo pouzivat vice lidi a abych si mohl zjednodusovat praci na klientskych projektech. Uz me nebavilo porad vytvaret a mazat databaze v CI pomoci bash scriptu, nebo zjistovat token s ServiceAccountu v Kubernetes pomoci 2 sub shellu a nekolik pipes.

    ## Proc v Go

    Kdyz jsem se rozhodoval pro technologii, mel jsem tyto pozadavky:

    - Multiplatformni
    - Jednoduchy na vyvoj
    - Malo zavislosti

    Mam na vyber asi mezi bashem (je vsude), Pythonem (muzu ho nainstalovat vsude) a Go (staticke binarky). Pokud ale vezmu druhy pozadavek, psani v Bashi je peklo, pokud se nejedna o sadu prikazu, ktere je potreba vykonat po sobe.

    Rozhodoval jsem se mezi Go a Pythonem. S Pythonem mam mnohem vetsi zkusenosti nez s Go, ale oproti Go ma 2 nevyhody. Za prve, potrebuju mit nainstalovany Python a za druhe, potrebuju mit nainstalovane knihovny. Neni to tak hrozne, ale porad stahnout jednu binarku, ktera umi vsechno je mnohem jednodussi.

    Navice existuje skvely tool [GoReleaser](https://goreleaser.com), ktery se stara o build a distribuci aplikace. A to uplne skvele, vcetne vytvareni brew balicku.

    ## CLI pomoci knihovny Cobra

    V Go je jeste jedna skvela vec, a to je knihovna [Cobra](https://github.com/spf13/cobra). Pomoci ni se daji delat CLI tooly velmi jednoduse, vcetne autocomplete a generovani dokumentace.

    ## slu: SikaLabs Utils

    Tooling jsem pojmenoval `slu`, at je to hezky kratke. V jeho subcommandech je potom pestra smes nastroju, ktere mi zjednodusuji vyvoj i praci s infrastrukturou.

    ## Instalace slu

    Diky GoReleaseru je distribuce a instalace jednoducha.

    #### Instalace na Macu

    Na Macu je instalace jednoducha, staci:

    ```
    brew install sikalabs/tap/slu
    ```

    #### Instalace na Linux AMD64 (pomoci install-slu)

    Na Linuxu staci stahnout binarku, rozbalit ji a dat ji do path. Udelal jsem ale i [install-slu](https://github.com/sikalabs/install-slu) tool, ktery jednou nainstaluju a pak jim muzu jednoduse upgradovat verze `slu`.

    ```bash
    VERSION=v0.1.0 && \
    OS=linux && \
    ARCH=amd64 && \
    BIN=install-slu && \
    curl -L https://github.com/sikalabs/${BIN}/releases/download/${VERSION}/${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz -o ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    tar -xvzf ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    rm ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    mv ${BIN} /usr/local/bin/
    ```

    Pak uz staci jen

    ```
    install-slu i
    ```

    a je to.


    #### Instalace na Linux AMD64 (na primo)

    Samozrejme muzeme `slu` nainstalovat primo pomoci:

    ```bash
    VERSION=v0.13.0 && \
    OS=linux && \
    ARCH=amd64 && \
    BIN=slu && \
    curl -L https://github.com/sikalabs/${BIN}/releases/download/${VERSION}/${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz -o ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    tar -xvzf ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    rm ${BIN}_${VERSION}_${OS}_${ARCH}.tar.gz && \
    mv ${BIN} /usr/local/bin/
    ```

    ## Ukazka pouziti

    Kdyz si dnes vypisu help, jsou tam tyto subcommandy:

    ```
    ondrej@sika-mac:~$ slu --help
    SikaLabs Utils, v0.13.0

    Usage:
      slu [command]

    Available Commands:
      completion       generate the autocompletion script for the specified shell
      expand           Expand environment variables in files and strings
      file-templates   Create common files from templates
      generate-docs    Generate Markdown docs
      gitlab-ci        Utils for Gitlab CI
      go-code          Utils for writing Go code
      help             Help about any command
      install-bin      Install Binary
      install-bin-tool Install preconfigured binary tool like Terraform, Vault, ...
      ip               Get my current IP address (using checkip.amazonaws.com)
      k8s              Utils for Kubernetes
      mysql            MySQL Utils
      postgres         Postgres Utils
      proxy            Proxy Utils
      tls              TLS Utils
      version          Prints version

    Flags:
      -h, --help   help for slu
          --json   Formatu output to JSON

    Use "slu [command] --help" for more information about a command.
    ```

    K dnesnimu dni `slu` obsahuje tooling pro variable expansion, praci s TLS certifikaty, ziskani IP, proxy, ...

    Pojdme si ukazat alespon nejake ukazky, vice urcite bude v nasledujicich poskytovatel√≠ch.

    #### Get public IP address

    [docs](https://github.com/sikalabs/slu-cli-docs/blob/master/slu_ip.md)

    ```
    ondrej@sika-mac:~$ slu ip
    111.44.56.39
    ondrej@sika-mac:~$
    ```

    #### Create Postgres Database

    [docs](https://github.com/sikalabs/slu-cli-docs/blob/master/slu_postgres_create.md)

    ```
    ondrej@sika-mac:~$ slu postgres -H localhost -P 5432 -u postgres -p pg create -n foo
    ondrej@sika-mac:~$
    ```

    ### Version bump in Go code

    [docs](https://github.com/sikalabs/slu-cli-docs/blob/master/slu_go-code_version-bump.md)

    ```
    ondrej@sika-mac:~$ slu go-code version-bump -v 0.33.1 -t
    ondrej@sika-mac:~$
    ```

    ### Install Terraform

    [docs](https://github.com/sikalabs/slu-cli-docs/blob/master/slu_install-bin-tool_terraform.md)

    ```
    ondrej@sika-mac:~$ slu install-bin-tool terraform
    ondrej@sika-mac:~$
    ```

    ## Zaver

    Zdrojove kody jsou samozrejme na Githubu:

    - slu - https://github.com/sikalabs/slu
    - install-slu - https://github.com/sikalabs/install-slu

    Dokumentace je take na Githubu v repozitari [sikalabs/slu-cli-docs](https://github.com/sikalabs/slu-cli-docs/blob/master/slu.md#slu).

    Budu rad, kdyz Vam tool ulehci praci, dejte mi vedet na Twitteru [@ondrejsika](https://twitter.com/ondrejsika) jak se Vam slu libi. Pokud budete chtit neco pridat, poslete issue nebo pull request.


- id: prostredi-pro-vyvojare-spravovane-terraformem
  title: "Doƒçasn√© prost≈ôed√≠ pro v√Ωvoj√°≈ôe spravovan√© Terraformem"
  date: 20. 5. 2021
  ad: terraform
  tags:
    - development
    - terraform
    - cloud
  perex: |
    Team se n√°m ve firmƒõ zvƒõt≈°uje, najednou si v√≠ce lid√≠ pot≈ôebuje vytv√°≈ôet doƒçasn√© testovac√≠ a v√Ωvojov√© prost≈ôed√≠, jako jsou Kubernetes clustery, virtu√°ln√≠ stroje, kter√© mus√≠me nƒõjak rozumƒõ spravovat.
  content: |
    Team se n√°m ve firmƒõ zvƒõt≈°uje, najednou si v√≠ce lid√≠ pot≈ôebuje vytv√°≈ôet doƒçasn√© testovac√≠ a v√Ωvojov√© prost≈ôed√≠, jako jsou Kubernetes clustery, virtu√°ln√≠ stroje, kter√© mus√≠me nƒõjak rozumƒõ spravovat.

    ## Probl√©m

    Kolega Jakub po mƒõ chtƒõl Kubernetes cluster, aby na nƒõm mohl udƒõlat demo ohlednƒõ ArgoCD. J√° bych to standardnƒõ ≈ôe≈°il tak, ≈æe bych si spustil moje demo Kubernetes na DigitalOceanu pomoc√≠ Terraformu, viz repo [ondrejsika/terraform-demo-k8s](https://github.com/ondrejsika/terraform-demo-k8s).

    Jen≈æe ono to nen√≠ tak jednoduch√©. J√° u≈æ tohle repo naklonovan√© m√°m, a taky m√°m p≈ôipraven√Ω i soubor `terraform.auto.tfvars` se spr√°vnƒõ vyplnƒõn√Ωmi tokeny do Cloudflare a DigitalOceanu a v z√°sadƒõ zapnut√≠ toho clusteru mi nezabere ≈æ√°dn√Ω ƒças.

    Ale v p≈ô√≠padƒõ Jakuba je to nƒõco jin√©ho. On nem√° ani repo, ani nastaven√© values a tokeny k dev infrastruktu≈ôe by musel hledat nƒõkde ve 1Passwordu. A to u≈æ nen√≠ na chvilku, tenhle setup zabere mnohem v√≠c ƒçasu a mus√≠ se opakovat pro ka≈æd√Ω nov√Ω uk√°zkov√Ω repozit√°≈ô.

    ## ≈òe≈°en√≠

    ≈òe≈°en√≠ je m√≠t jednoduchou mo≈ænost, jak si spust√≠m resource, kter√Ω aktu√°lnƒõ pot≈ôebuji co nejrychleji. A proto vznikly tyto 2 repozit√°≈ôe [sikalabs/terraform-module-sikalabs-do-k8s](https://github.com/sikalabs/terraform-module-sikalabs-do-k8s) a `sikalabs/sl-infra-live-dev` (ten druh√Ω je priv√°tn√≠).

    ≈òe≈°en√≠ je v z√°sadƒõ jednoduch√©, m√≠sto r≈Øzn√Ωch stand alone Terraform√≠ch repozit√°≈ô≈Ø udƒõl√°me moduly co n√°m jednodu≈°e spust√≠ to co pot≈ôebujeme - v na≈°em p≈ô√≠padƒõ se jedn√° o Kubernetes cluster vƒçetnƒõ load balanceru a DNS z√°znamu. Ten pak pouze pou≈æ√≠v√°me s r≈Øznou konfigurac√≠ v r√°mci jednoho repozit√°≈ôe a v≈°e co je v masteru toho `sikalabs/sl-infra-live-dev` repozit√°≈ôe m√°me nasazen√©. J√° m√°m nasazov√°n√≠ master≈Ø udƒõlan√© automaticky pomoc√≠ integrace Terraform Cloudu s Githubem, ale i manu√°ln√≠ spou≈°tƒõn√≠ nebo spou≈°tƒõn√≠ pomoc√≠ Gitlab CI je OK.

    ## A jak to vlastnƒõ vypad√°?

    V repozit√°≈ôi `sikalabs/sl-infra-live-dev` m√°me nastaven√Ω remote backend a v nƒõm v≈°echny tokeny, v√Ωvoj√°≈ôi nemus√≠ m√≠t ≈æ√°dn√© lok√°ln√≠ nastaven√≠. Pouze staƒç√≠ b√Ωt p≈ôihl√°≈°en k Terraform Cloudu (pomoci p≈ô√≠kazu `terraform login`).

    ```tf
    // _backend.tf

    terraform {
      backend "remote" {
        organization = "sikalabs"
        workspaces {
          name = "sikalabs-live-dev"
        }
      }
    }
    ```

    Proto≈æe pou≈æ√≠v√°me remote execution, nastaven√≠ promƒõnn√Ωch pro providery m√°me v Terraform Cloudu:

    ```tf
    // _providers.tf

    variable "digitalocean_token" {}
    provider "digitalocean" {
      token = var.digitalocean_token
    }

    variable "cloudflare_api_token" {}
    provider "cloudflare" {
      api_token = var.cloudflare_api_token
    }
    ```

    V≈°echny "glob√°ln√≠" soubory m√°m prefixovan√© podtr≈æ√≠tkem, abych je oddƒõlil od tƒõch doƒçasn√Ωch, kde si ka≈æd√Ω vytv√°≈ô√≠ a ma≈æe podle pot≈ôeby.

    Tak≈æe to m≈Ø≈æe vypadat takhle:

    ```tf
    module "ondrejsika_k8s_foo" {
      source              = "sikalabs/sikalabs-do-k8s/module"
      version             = "0.1.0"
      prefix              = "alp"
      cloudflare_zone_id  = local.sikadev_com_zone_id
      digitalocean_region = "fra1"
      kubernetes_version  = "1.20.2-do.0"
      node_size           = "s-2vcpu-4gb"
      node_count          = 3
    }

    module "ondrejsika_k8s_bar" {
      source              = "sikalabs/sikalabs-do-k8s/module"
      version             = "0.1.0"
      prefix              = "alp"
      cloudflare_zone_id  = local.sikadev_com_zone_id
      digitalocean_region = "fra1"
      kubernetes_version  = "1.20.2-do.0"
      node_size           = "s-2vcpu-4gb"
      node_count          = 1
    }

    output "ondrejsika_kubeconfig_foo" {
      value     = module.ondrejsika_k8s_foo.kubeconfig
      sensitive = true
    }

    output "ondrejsika_kubeconfig_bar" {
      value     = module.ondrejsika_k8s_bar.kubeconfig
      sensitive = true
    }
    ```

    Vid√≠me, ≈æe tady pou≈æ√≠v√°m Terraform modul ([sikalabs/terraform-module-sikalabs-do-k8s](https://github.com/sikalabs/terraform-module-sikalabs-do-k8s)), co mi vytvo≈ô√≠ Kubernetes cluster se v≈°√≠m co bƒõ≈ænƒõ pot≈ôebuju (load balancer a DNS z√°znamy).

    A pak si ka≈æd√Ω kdo pot≈ôebuje nƒõco v testovac√≠m prost≈ôed√≠ pustit pouze p≈ôid√° sv√© resources a commitne. Kdy≈æ u≈æ je nepot≈ôebuje, zase je sma≈æe a opƒõt commitne.

- id: puldenni-workshopy
  hidden: true
  title: "Puldenni workshopy - novy format skoleni"
  date: 1. 1. 2021
  tags:
    - skoleni
  perex: |
    Zkousim novy format mych skoleni / workshopu. Ne kazde tema je tak obsahle, ze je potreba jednodenni skoleni, ale natolik zajimave, ze to chce workshop!
  content: |
    Zkousim novy format mych skoleni / workshopu - puldenni workshopy.

    Ne kazde tema je tak obsahle, ze je potreba jednodenni skoleni, ale natolik zajimave, ze to chce workshop!

    Napadaji me 2 varianty techtoo workshopu:

    - Male ucelene tema
    - Novinky ke skoleni

    Pokusim se je pospsat trosku podrobneji.

    ### Male ucelene tema

    Pokud Vas zajima Cloudflare, Skaffold, Vercel, ... nejsou to temata pro jednodenni skoleni. Jsou moc male nebo specificke. Ale porad stoji za to se s temito nastroji naucit. Den je spousta casu, ale jedno patecni odpoledne venovat rozveji uz nezni tak zle? ;)

    Proto jsem se rozhodl delat tyto mini skoleni na zajimava temata, jen trosku kratsi.

    ### Novinky ke skoleni

    Nastroje se vyvijeji, neco zastarava a nektere workflow se meni. I me skoleni se meni v case. Je zbytecne aby clovek sel na skoleni za rok znovu, i kdyz obcas neni na skodu si pripomenout i zaklady. Cilem kratkeho 4 hodinoveho workshopu je ukazat si co se zmenilo a tak byt porad v obraze.

- id: zaznam-devops-live-20-prometheus-metriky-ve-vlastni-aplikaci
  title: "Z√°znam DevOps Live #20: Prometheus metriky ve vlastn√≠ aplikaci"
  date: 16. 6. 2021
  ad: prometheus
  tags:
    - prometheus
    - devopslive
  perex: |
    Z√°znanam z dvac√°t√©ho live streamu: Prometheus metriky ve vlastn√≠ aplikaci
  youtube: HdFiLeCaAEY
  content: |
    Pokud se chcete nauƒçit l√©pe pracovat s Prometheus, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Prometheus__](/skoleni/prometheus), nebudete litovat.

- id: zaznam-devops-live-19-nebojte-se-git-rebase
  title: "Z√°znam DevOps Live #19: Nebojte se git rebase"
  date: 2. 6. 2021
  ad: gitlab-ci
  tags:
    - git
    - gitlab
    - github
  perex: |
    Z√°znam z devaten√°ct√©ho live streamu: Ovl√°dnƒõte Makefile a zjednodu≈°te si manu√°ln√≠ tasky
  youtube: avq2rQW6tHE
  content: |
    Pokud se chcete nauƒçit pracovat kromƒõ Git Rebase t≈ôeba i s Gitlab CI, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci), nebudete litovat.


- id: zaznam-devops-live-18-vytvarejte-vlastni-dashboardy-v-grafane
  title: "Z√°znam DevOps Live #18: Vytv√°≈ôejte vlastn√≠ Dashboardy v Grafane"
  date: 19. 5. 2021
  ad: prometheus
  tags:
    - prometheus
    - devopslive
  perex: |
    Z√°znanam z osmn√°ct√©ho live streamu: Vytv√°≈ôejte vlastn√≠ Dashboardy v Grafane
  youtube: KyYqqpFWCpE
  content: |
    Pokud se chcete nauƒçit l√©pe pracovat s Prometheus, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Prometheus__](/skoleni/prometheus), nebudete litovat.

- id: zaznam-devops-live-17-ovladnete-makefile-a-zjednodusete-si-manualni-tasky
  title: "Z√°znam DevOps Live #17: Ovl√°dnƒõte Makefile a zjednodu≈°te si manu√°ln√≠ tasky"
  date: 5. 5. 2021
  ad: gitlab-ci
  tags:
    - make
    - devopslive
  perex: |
    Z√°znam ze sedmn√°ct√©ho live streamu: Ovl√°dnƒõte Makefile a zjednodu≈°te si manu√°ln√≠ tasky
  youtube: hBNFiqUS33k
  content: |
    Pokud se chcete nauƒçit pracovat kromƒõ Makefile t≈ôeba i s Gitlab CI, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci), nebudete litovat.

- id: zaznam-devops-live-16-wireguard-jednoducha-a-spolehliva-vpn
  title: "Z√°znam DevOps Live #16: Wireguard - Jednoduch√° a spolehliv√° VPN"
  date: 21. 4. 2021
  ad: gitlab-ci
  tags:
    - wireguard
    - devopslive
  perex: |
    Z√°znanam z ≈°estn√°ct√©ho live streamu: Wireguard - Jednoduch√° a spolehliv√° VPN
  youtube: PqezaZGOcH0
  content: |
    Pokud se chcete nauƒçit pracovat kromƒõ Wireguard t≈ôeba i s Gitlab CI, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci), nebudete litovat.

- id: zaznam-devops-live-15-jednoducha-distribuce-go-binarek-pomoci-goreleaser-a-ci
  title: "Z√°znam DevOps Live #15: Jednoduch√° distribuce Go bin√°rek pomoc√≠ GoReleaser a CI"
  date: 7. 4. 2021
  ad: gitlab-ci
  tags:
    - go
    - goreleaser
    - github
    - ci
    - devopslive
  perex: |
    Z√°znanam z patn√°ct√©ho live streamu: Jednoduch√° distribuce Go bin√°rek pomoc√≠ GoReleaser a CI
  youtube: A99IDxxKmL4
  content: |
    Pokud se chcete nauƒçit pracovat s Gitlab CI, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci), nebudete litovat.

- id: zaznam-devops-live-14-jak-na-lokalni-kubernetes-development-pomoci-skaffold
  title: "Z√°znam DevOps Live #14: Jak na lok√°ln√≠ Kubernetes Development pomoc√≠ Skaffold"
  date: 24. 3. 2021
  ad: kubernetes
  tags:
    - kubernetes
    - skaffold
    - devopslive
  perex: |
    Z√°znanam z ƒçtrn√°ct√©ho live streamu: Jak na lok√°ln√≠ Kubernetes Development pomoc√≠ Skaffold
  youtube: 5SDaFLAHHlE
  content: |
    Pokud se chcete nauƒçit pracovat s Kubernetes, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Kubernetres__](/skoleni/kubernetes), nebudete litovat.

- id: zaznam-devops-live-13-longhorn-jednoducha-on-premise-storage-pro-kubernetes
  title: "Z√°znam DevOps Live #13: Longhorn - Jednoduch√° on-premise storage pro Kubernetes"
  date: 10. 3. 2021
  ad: kubernetes
  tags:
    - kubernetes
    - longhorn
    - devopslive
  perex: |
    Z√°znanam z t≈ôin√°ct√©ho live streamu: Longhorn - Jednoduch√° on-premise storage pro Kubernetes
  youtube: pfQG320_l2Q
  content: |
    Pokud se chcete nauƒçit pracovat s Kubernetes, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Kubernetres__](/skoleni/kubernetes), nebudete litovat.

- id: zaznam-devops-live-12-vlastni-terraform-provider
  title: "Z√°znam DevOps Live #12: Vlastn√≠ Terraform provider"
  date: 24. 2. 2021
  ad: terraform
  tags:
    - terraform
    - devopslive
  perex: |
    Z√°znanam z dvan√°ct√©ho DevOps live streamu na t√©ma Vlastn√≠ Terraform provider
  youtube: pJOVV_CEpzY
  content: |
    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Terraform__](/skoleni/terraform), nebudete litovat.

- id: zaznam-devops-live-11-uvod-do-github-actions
  title: "Z√°znam DevOps Live #11: √övod do Github Actions"
  date: 10. 2. 2021
  tags:
    - github
    - gitlab
    - gitlab-ci
    - devopslive
  perex: |
    Z√°znanam z jeden√°ctn√©ho DevOps live streamu na t√©ma √övod do Github Actions
  youtube: TYwgCdUdQ20

- id: zaznam-devops-live-10-kubernetes-pomoci-rke
  title: "Z√°znam DevOps Live #10: Kubernetes pomoc√≠ RKE (Rancher Kubernetes Engine)"
  date: 27. 1. 2021
  ad: terraform
  tags:
    - rke
    - terraform
    - kubernetes
    - devopslive
  perex: |
    Z√°znanam z des√°t√©ho DevOps live streamu na t√©ma Kubernetes pomoc√≠ RKE (Rancher Kubernetes Engine)
  youtube: U9EoKACTUy0
  content: |
    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Terraform__](/skoleni/terraform), nebudete litovat.

- id: zaznam-devops-live-9-uvod-do-cloud-initu
  title: "Z√°znam DevOps Live #9: √övod do Cloud Initu"
  date: 13. 1. 2021
  ad: terraform
  tags:
    - cloud-init
    - terraform
    - devopslive
  perex: |
    Z√°znanam z dev√°t√©ho DevOps live streamu na t√©ma √övod do Cloud Initu
  youtube: hSyBBLWRXLs
  content: |
    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Terraform__](/skoleni/terraform), nebudete litovat.

- id: zhodnoceni-roku-2020-a-plany-na-rok-2021
  hidden: false
  title: "Zhodnocen√≠ roku 2020 a pl√°ny na rok 2021"
  date: 1. 1. 2021
  tags: []
  perex: |
    Dal≈°√≠ √∫spƒõ≈°n√Ω a n√°roƒçn√Ω rok je za mnou. Bez V√°s bych to v≈°ak nedok√°zal. D√≠ky. A co se v roce 2020 dƒõlo?

  content: |
    ## Rok 2020

    Dal≈°√≠ √∫spƒõ≈°n√Ω a n√°roƒçn√Ω rok je za mnou. Bez V√°s bych to v≈°ak nedok√°zal. D√≠ky. A co se v roce 2020 dƒõlo?

    - Nov√© kurzy
    - DevOps Live
    - Implementace DevOps

    #### Nov√© kurzy 2020

    Minul√Ω rok jsem ke sv√Ωm popul√°rn√≠m ≈°kolen√≠m Gitlab CI, Dockeru, Kubernetes a Terraformu p≈ôidal dal≈°√≠ch 5 a roz≈°√≠≈ôil jsem nab√≠dku kurz≈Ø tak, ≈æe pokr√Ωvaj√≠ celou DevOps pipeline.

    Moje nov√© kurzy jsou:

    - [Rancher](/skoleni/rancher) - On-premise Kubernetes
    - [Prometheus Stack (Prometheus, Alertmanager, Grafana)](/skoleni/prometheus) - Nejen cloud native monitoring
    - [Elastic Stack (d≈ô√≠ve ELK)](/skoleni/elk) - Log management
    - [DigitalOcean](/skoleni/digitalocean) - Public cloud jednodu≈°e
    - [Proxmox](/skoleni/proxmox) - Open source virtualizace a on-premise cloud platforma

    Pokud m√°te z√°jem o nƒõjak√© ≈°kolen√≠ nebo jen dotaz, napi≈°te mi na <ondrej@sika.io>.

    #### DevOps Live

    V polovinƒõ roku 2020 jsem zaƒçal dƒõlat streamy live codingu, DevOps Live, a k dne≈°n√≠mu dni jsme mƒõli 8 event≈Ø na t√©mata Dockeru, monitoringu, Terraformu, a dal≈°√≠ch ... Souhrnn√Ω blog post DevOps live stream≈Ø z 2020 je zde: [DevOps Live 2020](/blog/devops-live-2020/)

    Streamy celkem vidƒõlo u≈æ t√©mƒõ≈ô 1000 program√°tor≈Ø, co pova≈æuju za velk√Ω √∫spƒõch a proto v nich chci pokraƒçovat i do budoucna. Kouknƒõte na t√©mata pro [rok 2020](/devopslive).

    #### Implementace DevOps

    J√° a m≈Øj [team](/team) jsme pro klienty zaƒçali v minul√©m roce dƒõlat DevOps implementace na m√≠ru. Jako firma hezky ≈°k√°lujeme. Pokud m√°te z√°jem o spolupr√°ci, napi≈°te mi email na <ondrej@sika.io>.

    ## Pl√°ny pro rok 2021

    A co pl√°nuji do nov√©ho roku? Je toho hodnƒõ, velkou ƒç√°st projekt≈Ø jsme rozjeli v roce 2020 a i d≈ô√≠ve. Teƒè n√°s ƒçek√° jejich rozvoj:

    - Nov√© kurzy
    - Skoleni.io
    - Trainera.io
    - Meetupy & Community
    - Devopsaci.cz

    #### Nov√© Kurzy 2021

    Pl√°nuji 4 nov√© kurzy na kter√Ωch teƒè pracuji a kter√© budou brzy k dispozici (Q1).

    - Vault - Secret Management
    - OpenStack (pro v√Ωvoj√°≈ôe) - √övod do spr√°vy infrastruktury v OpenStacku
    - AWS (√övod) - √övod do cloudov√© platformy AWS
    - Azure (√övod) - √övod do cloudov√© platformy Azure

    Zaujali mƒõ 2 nov√© n√°stroje od HashiCorpu: Boundary a Waypoint. Mus√≠m si je vyzkou≈°et a pokud to bude d√°vat smysl, vytvo≈ôil bych kurzy i na nƒõ.

    Pokud by V√°s kurzy zaujali, dejte vƒõdƒõt.

    #### Skoleni.io

    Posledn√≠ 3 mƒõs√≠ce v roce 2020 jsme p≈ôipravovali port√°l [≈†kolen√≠.io](/skoleniio). ≈†kolen√≠.io je port√°l, kde m≈Ø≈æou freelance lekto≈ôi nab√≠zet sv√© IT ≈°kolen√≠ a workshopy. Pro firmy je jednodu≈°≈°√≠ hledat ≈°kolen√≠ na jednom m√≠stƒõ. Velkou inspiraci mi byl port√°l Na Voln√© Noze od Roberta Vlacha.

    Port√°l ≈†kolen√≠.io spou≈°t√≠me v lednu 2020, na webu u≈æ v≈°ak m√°me 9 skvƒõl√Ωch lektor≈Ø a 30+ kurz≈Ø. Douf√°m, ≈æe dal≈°√≠ budou ƒçasem p≈ôib√Ωvat.

    Pokud chcete nab√≠zet svoje kurzy na port√°lu ≈†kolen√≠.io, napi≈°te na <spoluprace@skoleni.io>.

    #### Trainera

    Do teƒè jsem ≈°kolil jako freelancer. A mƒõlo to sv√© v√Ωhody. Vlastnƒõ je to m√° po≈ô√°d. Velkou v√Ωhodou freelance lektora je to, ≈æe firmy popt√°vaj√≠ p≈ô√≠mo jeho. Chtƒõj√≠ konkr√©tn√≠ ≈°kolen√≠ od konkr√©tn√≠ho ƒçlovƒõka.

    Nev√Ωhodou pak je to, ≈æe v≈°e mus√≠m vy≈ôizovat s√°m: od domluvy term√≠nu po fakturace. A toho na mƒõ u≈æ bylo moc. Z√°rove≈à popt√°vka po nƒõkter√Ωch kurzech byla vysok√° a m≈Øj kalend√°≈ô se hodnƒõ plnil. Rozhodl jsem se roz≈°√≠≈ôit team a ≈°kolen√≠ nab√≠zet i pod brandem Trainera, prim√°rnƒõ pro zahraniƒç√≠.

    ##### Nƒõmecko

    Sv√© ≈°kolen√≠ chci expandovat za hranice, konkr√©tnƒõ do Nƒõmecka. To co ≈°kol√≠m a dƒõl√°m prim√°rnƒõ v ƒåech√°ch a na Slovensku chci posunout smƒõrem na z√°pad a otev≈ô√≠t prvn√≠ trh a to je Nƒõmecko.

    Jestli m√°te nƒõkdo zku≈°enost, budu moc r√°d, pokud mi d√°te rady jak na to.

    #### Meetupy & Community

    V roce 2020 se moc meetup≈Øm a osobn√≠m setk√°n√≠m neda≈ôilo, douf√°m ≈æe se to v roce 2021 zlep≈°√≠. Ale i tak se mi u≈æ nechce ƒçekat a chci vykopnout meetupy a komunity, kter√© p≈ôipravujeme. I kdy≈æ budou meetupy ze zaƒç√°tku online, nem≈Ø≈æu se doƒçkat, a≈æ ƒçasem p≈ôejdeme do offline, face-to-face.

    - Vercel Czech Community
    - DigitalOcean Czech Community
    - Prague HashiCorp User Group

    ##### Vercel Czech Community

    Vercel meetupy organizuji spoleƒçnƒõ s [Milanem ≈†ulcem](https://sulc.dev) a prvn√≠ online meetup u≈æ je za n√°mi. Jeho z√°znam je na webu [vercel.cz](https://vercel.cz).

    ##### DigitalOcean Czech Community

    DigitalOcean pou≈æ√≠v√°m r√°d a rozhodnƒõ v ƒåech√°ch nejsem jedin√Ω, chci se potk√°vat s dal≈°√≠mi lidmi a sd√≠let zku≈°enosti s t√≠mto men≈°√≠m cloudem. Vƒõ≈ô√≠m, ≈æe hodnƒõ lidem pom≈Ø≈æe zlep≈°it jejich infrastrukturu, kter√° obƒças stoj√≠ na ne √∫plnƒõ kvalitn√≠ch poskytovatel√≠ch.

    P≈ôidejte se na [digitalocean.cz](https://digitalocean.cz)

    ##### Prague HashiCorp User Group

    Meetupy na t√©mata Terraformu, Vaultu a vlastnƒõ v≈°ech n√°stroj≈Ø HashiCorpu jsem chtƒõl zaƒç√≠t dƒõlat u≈æ minul√© jaro, bohu≈æel do toho p≈ôi≈°la corona. Ale proto≈æe letos je v≈°echno online a lid√© si na to zvykli, chci zaƒç√≠t hned.

    V√≠ce informac√≠ na: [hashicorp.cz](https://hashicorp.cz)

    #### Devopsaci.cz

    Je to nejvƒõt≈°√≠ krok k budov√°n√≠ DevOps komunity v ƒåech√°ch. Je tu hodnƒõ skvƒõl√Ωch meetup≈Ø jako je Prague Containers, Cloud Native Prague a dal≈°√≠, ale jsou to jen izolovan√© meetupy, ne komunita jako jsou Frontendisti.cz, Backendisti.cz nebo Pehapkari.cz.

    Proto jsem se rozhodl spojit DevOps√°ky a zalo≈æit Devopsaci.cz. V√≠m, ≈æe to nebude jednoduch√©, budu r√°d za jakoukoliv radu a pomoc. D√≠ky.

    C√≠lem komunity je spojit DevOpsaky do jedn√© skupiny, kde m≈Ø≈æou ≈ôe≈°it sv√© probl√©my, postovat zaj√≠mav√© novinky a vzdƒõl√°vat se.

    Devops√°ci, spojme se na [Devopsaci.cz](https://devopsaci.cz)

    ---

    Pevnƒõ vƒõ≈ô√≠m, ≈æe se v nov√©m roce nep≈ô√≠zniv√° situace s covidem uklidn√≠ a my se budeme moci na ≈°kolen√≠ch nebo na pivu zas potk√°vat osobnƒõ.

    P≈ôeju V√°m v≈°em hodnƒõ zdrav√≠ a energie do roku 2021,
    <br />
    O.

- id: devops-live-2020
  title: "DevOps Live 2020"
  date: 28. 12. 2020
  tags:
    - devopslive
  perex: |
    Souhrn DevOps live stream≈Ø za rok 2020
  content: |
    V polovinƒõ roku jsem zaƒçal dƒõlat kr√°tk√© livestreamy na t√©mata z DevOps, pravidelnƒõ jednou za 14 dn√≠ v≈ædy ve St≈ôedu v 19:00. Je konec roku a j√° bych chtƒõl shrnout, jak se jim da≈ôilo.
    Mƒõli jsme jich celkem 8, z toho vznikly i 2 roz≈°i≈ôuj√≠c√≠ ƒçl√°nky na blogu:

    - Spr√°va Gitlabu a Githubu pomoc√≠ Terraformu - [z√°znam](https://www.youtube.com/watch?v=2pbU11RoTRQ), [ƒçl√°nek](/blog/sprava-gitlabu-pomoci-terraformu/)
    - Docker & Traefik Proxy - [z√°znam](https://www.youtube.com/watch?v=C5r8MNys614)
    - Jednoduch√° integrace Gitlab CI a Kubernetes - [z√°znam](https://www.youtube.com/watch?v=uRc1aFcy7CE)
    - √övod do Terraformu - [z√°znam](https://www.youtube.com/watch?v=jNx0fnw6qP8)
    - Novinky v Gitlab CI (listopad 2020) - [z√°znam](https://www.youtube.com/watch?v=vRYvEMiVvTw)
    - Proƒç a jak pou≈æ√≠vat Cloudflare - [z√°znam](https://www.youtube.com/watch?v=6C-Pyn3oTV4)
    - Docker monitoring pomoc√≠ Prom√©thea a Alertmanageru - [z√°znam](https://www.youtube.com/watch?v=m3vogisBUxo)
    - Konfigurace Alertmanageru - [z√°znam](https://www.youtube.com/watch?v=WBX6bSiZDjo), [ƒçl√°nek](/blog/konfigurace-alertmanageru)

    Sledovanost stream≈Ø byla skvƒõl√°, neƒçekal jsem z√°jem 20-30 zaƒç√≠naj√≠c√≠ch program√°tor≈Ø ale i IT expert≈Ø na jednu session, co≈æ mƒõ mile p≈ôekvapilo. Je to super a pro mƒõ je to skvƒõl√° motivace pokraƒçovat i v dal≈°√≠m roce. Nenechte si uj√≠t dal≈°√≠ zaj√≠mav√° t√©mata:

    - √övod do Cloud Initu
    - Kubernetes pomoc√≠ RKE (Rancher Kubernetes Engine)
    - √övod do Github Actions
    - Vlastn√≠ Terraform Provider
    - Longhorn - Jednoduch√° on-premise storage pro Kubernetes
    - Skaffold - Local Kubernetes Development
    - GoReleaser a CI

    P≈ôihl√°sit se na stream m≈Ø≈æete zde: [ondrej-sika.cz/devopslive](/devopslive)

    Pokud m√°te n√°pad na zaj√≠mav√© t√©ma, urƒçitƒõ mi dejte vƒõdƒõt na <ondrej@sika.io> a domluv√≠me se.

- id: konfigurace-alertmanageru
  hidden: true
  title: "Konfigurace Alert Manageru"
  date: 26. 12. 2020
  ad: prometheus
  tags:
    - prometheus
    - alertmanager
    - devopslive
  perex: |
    Alert Manager je komponenta Prometheus monitoring stacku, kter√° se star√° o pos√≠l√°n√≠ alert≈Ø. V ƒçl√°nku uk√°≈æu jak nastavit Alert Manager tak, aby se spr√°vn√© notifikace odes√≠lali spr√°vn√Ωm team≈Øm, jak seskupovat alerty a jak pos√≠lat jen to d≈Øle≈æit√©, kdy≈æ v≈°echno pad√°.
  content: |
    Alert Manager je komponenta Prometheus monitoring stacku, kter√° se star√° o pos√≠l√°n√≠ alert≈Ø. V ƒçl√°nku uk√°≈æu jak nastavit Alert Manager tak, aby se spr√°vn√© notifikace odes√≠lali spr√°vn√Ωm team≈Øm, jak seskupovat alerty a jak pos√≠lat jen to d≈Øle≈æit√©, kdy≈æ v≈°echno pad√°.

- id: zaznam-devops-live-8-konfigurace-alertmanageru
  title: "Z√°znam DevOps Live #8: Konfigurace Alertmanageru"
  date: 22. 12. 2020
  ad: prometheus
  tags:
    - prometheus
    - alertmanager
    - devopslive
  perex: |
    Z√°znanam ze osm√©ho DevOps live streamu na t√©ma Konfigurace Alertmanageru
  youtube: WBX6bSiZDjo
  content: |
    Pokud se chcete nauƒçit pracovat s Prometheem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Prometheus__](/skoleni/prometheus), nebudete litovat.

- id: zaznam-devops-live-7-docker-monitoring-pomoci-promethea-a-alertmanageru
  title: "Z√°znam DevOps Live #7: Docker monitoring pomoc√≠ Promethea a Alertmanageru"
  date: 2. 12. 2020
  ad: prometheus
  tags:
    - prometheus
    - docker
    - alertmanager
    - devopslive
  perex: |
    Z√°znanam ze sedm√©ho DevOps live streamu na t√©ma Docker monitoring pomoc√≠ Promethea a Alertmanageru
  youtube: m3vogisBUxo
  content: |
    Repozit√°≈ô s uk√°zkou k√≥du je: <https://github.com/ondrejsika/example-docker-monitoring>

    Pokud se chcete nauƒçit pracovat s Prometheem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Prometheus__](/skoleni/prometheus), nebudete litovat.

- id: zaznam-devops-live-6-proc-a-jak-pouzivat-cloudflare
  title: "Z√°znam DevOps Live #6: Proƒç a jak pou≈æ√≠vat Cloudflare"
  date: 18. 11. 2020
  ad: terraform
  tags:
    - cloudflare
    - terraform
    - devopslive
  perex: |
    Z√°znanam ze ≈°est√©ho DevOps live streamu na t√©ma Proƒç a jak pou≈æ√≠vat Cloudflare
  youtube: 6C-Pyn3oTV4
  content: |
    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Terraform__](/skoleni/terraform), nebudete litovat.

- id: zaznam-devops-live-5-uvod-do-terraformu
  title: "Z√°znam DevOps Live #5: Novinky v Gitlab CI (listopad 2020)"
  date: 2. 12. 2020
  ad: gitlab-ci
  tags:
    - gitlab
    - gitlab-ci
    - devopslive
  perex: |
    Z√°znanam z p√°t√©ho DevOps live streamu na t√©ma Novinky v Gitlab CI
  youtube: Vvx6rS17mrw
  content: |
    Pokud se chcete nauƒçit pracovat s CI v Gitlabu, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci), nebudete litovat.

- id: zaznam-devops-live-4-uvod-do-terraformu
  title: "Z√°znam DevOps Live #4: √övod do Terraformu"
  date: 17. 11. 2020
  ad: terraform
  tags:
    - terraform
    - devopslive
  perex: |
    Z√°znanam z ƒçtvrt√©ho DevOps live streamu na t√©ma √övod do Terraformu
  youtube: jNx0fnw6qP8
  content: |
    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Terraformu__](/skoleni/terraform), nebudete litovat.

- id: zaznam-devops-live-3-integrace-gitlab-ci-a-kubernetes
  title: "Z√°znam DevOps Live #3: Jednoduch√° integrace Gitlab CI a Kubernetes"
  date: 16. 11. 2020
  ad: kubernetes
  tags:
    - kubernetes
    - gitlab-ci
    - devopslive
  perex: |
    Z√°znanam z t≈ôet√≠ho DevOps live streamu: Jednoduch√° integrace Gitlab CI a Kubernetes
  youtube: uRc1aFcy7CE
  content: |
    Pokud se chcete nauƒçit pracovat s Gitlab CI a Kubernetes, doporuƒçuji V√°m m√© ≈°kolen√≠ [__Gitlab CI__](/skoleni/gitlab-ci) a [__Kubernetres__](/skoleni/kubernetes), nebudete litovat.

- id: terraform-a-gitlab-ci-14-meetup-cncf-sk
  title: "Terraform a Gitlab CI (14. meetup CNCF.sk)"
  date: 12. 11. 2020
  ad: terraform
  tags:
    - terraform
    - gitlab-ci
    - cncf-sk
  perex: |
    Slides a repozit√°≈ôe z 14. meetupu Cloud Native - Kubernetes - Bratislava na tema Terraform a Gitlab CI
  content: |
    Slides a repozit√°≈ôe z 14. meetupu Cloud Native - Kubernetes - Bratislava na tema Terraform a Gitlab CI

    Odkazy:

    - Slides: https://docs.google.com/presentation/d/1K1-bM3SORRLRmr1NBEP_0mWsVnD0GvZzHQCqKoJO4WY/edit
    - Repo: https://github.com/ondrejsika/example-terraform-gitlab-ci
    - Repo (se zmenamy): https://github.com/sika-training-examples/2020-11-12-terraform-gitlab-ci-example

    Odkaz na z√°znam p≈ôid√°m a≈æ bude k dispozici.

    Pokud m√°te jak√©koliv dotazy, napi≈°te na <ondrej@sika.io>

- id: zaznam-devops-live-2-docker-a-traefik-proxy
  title: "Z√°znam DevOps Live #2: Docker & Traefik Proxy"
  date: 25. 9. 2020
  ad: docker
  tags:
    - docker
    - devopslive
  perex: |
    Z√°znanam z druh√©ho DevOps live streamu: Docker & Traefik Proxy
  youtube: C5r8MNys614
  content: |
    Pokud se chcete nauƒçit pracovat s Dockerem, doporuƒçuji V√°m m√© [__≈†kolen√≠ Dockeru__](/skoleni/docker), nebudete litovat.

- id: zaznam-devops-live-1-sprava-gitlabu-pomoci-terraformu
  title: "Z√°znam DevOps Live #1: Spr√°va Gitlabu a Githubu pomoc√≠ Terraformu"
  date: 11. 9. 2020
  ad: terraform
  tags:
    - terraform
    - gitlab
    - github
    - devopslive
  perex: |
    Z√°znanam z prvn√≠ho DevOps live streamu: Spr√°va Gitlabu a Githubu pomoc√≠ Terraformu
  youtube: 2pbU11RoTRQ
  content: |
    Pokud V√°s zaujal Terraform obecnƒõ, budu m√≠t dal≈°√≠ live stream p≈ô√≠mo na z√°klady Terraformu. Registrovat se m≈Ø≈æete na [Eventbrite](https://www.eventbrite.com/e/120441195859).

    Pokud se chcete nauƒçit pracovat s Terraformem, doporuƒçuji V√°m m√© [__≈†kolen√≠ Terraformu__](/skoleni/terraform), nebudete litovat.

    <center>
    <Twitter tweet_id="1252334258292752392" />
    </center>

- id: sprava-gitlabu-pomoci-terraformu
  title: "Spr√°va Gitlabu pomoc√≠ Terraformu"
  date: 10. 9. 2020
  ad: terraform
  tags:
    - terraform
    - gitlab
    - devopslive
  perex: |
    Jak spravuju Gitlab? Klik√°m nov√© u≈æivatele, skupiny, repozit√°≈ôe? Ne! Pou≈æ√≠v√°m Terraform a uk√°≈æu V√°m jak to dƒõl√°m.
  content: |
    Tento blog post je shrnut√≠m m√©ho prvn√≠ho live streamu [DevOps Live](/devopslive). DevOps Live je stream live codingu na nƒõjak√© DevOps t√©ma, kter√© typicky nepokr√Ωv√°m ve sv√Ωch ≈°kolen√≠ch. Tento stream byl o mo≈ænosti spravovat konfiguraci Gitlabu deklarativn√≠m p≈ô√≠stupem, ƒçili Terraformem.

    Gitlab p≈ôedstavovat nemus√≠m, je to DevOps platforma: hosting Git repozit√°≈ô≈Ø, CI, ... Terraform je n√°stroj "Infrastructure as a Code", ƒçili na spr√°vu infrastrury formou k√≥du. Terraform se p≈ôev√°≈ænƒõ pou≈æ√≠v√° na spr√°vu Virtu√°ln√≠ch stroj≈Ø, S3 bucketu a Kubernetes clusteru v cloudu, ale d√° se pou≈æ√≠t i na spr√°vu Gitlabu (ƒçehokoliv co m√° API). Jdeme na to.

    ## Setup Terraform konfigurace

    Vytvo≈ô√≠me si repozit√°≈ô, kam budeme v≈°e d√°vat. Prvn√≠ co vytvo≈ô√≠me bude soubor `terraform.tf`, kde nakonfigurujeme remote backend v Terraform Cloudu, soubor `versions.tf` kde definujeme jak√© providery budeme pou≈æ√≠vat a soubor `providers.tf` kde je nainicializujeme.

    ```tf
    // terraform.tf
    terraform {
      backend "remote" {
        organization = "ondrejsika"

        workspaces {
          name = "gitlab"
        }
      }
    }
    ```

    ```tf
    // versions.tf
    terraform {
      required_providers {
        gitlab = {
          source = "terraform-providers/gitlab"
        }
      }
      required_version = ">= 0.13"
    }
    ```

    ```tf
    // providers.tf
    variable "gitlab_token" {}
    variable "gitlab_domain" {}

    provider "gitlab" {
      base_url = "https://${var.gitlab_token}/api/v4/"
      token = var.gitlab_token
    }
    ```

    Terraform nainicializujeme p≈ô√≠kazem `terraform init`. Pot≈ôebujeme nastavit akor√°t token, kter√©mu d√°me pr√°va na API a sudo a dom√©nu Gitlabu. Pou≈æ√≠v√°m Terraform remote execution, tyto promƒõnn√© m√°m definovan√© v Terraform Cloudu (samoz≈ôejmƒõ Terraformem).

    A teƒè k samotn√© spr√°vƒõ Gitlabu. Dokumentace ke Gitlab Provideru (`terraform-provider-gitlab`) je na: https://www.terraform.io/docs/providers/gitlab/index.html a je dob≈ôe napsan√°.

    ## U≈æivatel√©

    J√° v Gitlabu pot≈ôebuji spravovat hlavnƒõ u≈æivatele, skupiny a repozit√°≈ôe. A samoz≈ôejmƒõ vazby mezi nimi.

    V≈°echny u≈æivatele definuju v jednom souboru `users.tf`.

    ```tf
    // users.tf
    resource "gitlab_user" "vojtechmares" {
      name             = "Ondrej Sika"
      username         = "ondrejsika"
      email            = "xxx@xxx.com"
      can_create_group = false
      reset_password   = false
      projects_limit    = 100000
    }

    resource "gitlab_user" "vojtechmares" {
      name             = "Vojtƒõch Mare≈°"
      username         = "vojtechmares"
      email            = "xxx@xxx.com"
      can_create_group = false
      reset_password   = false
      projects_limit    = 100000
    }
    ```

    ## Skupiny

    Ostatn√≠ resources se sna≈æ√≠m m√≠t oddƒõlenƒõ, pro ka≈æd√Ω m√°m vlastn√≠ soubor, nap≈ô√≠klad pro skupinu `www` m√°m soubor `group_www.tf`. V tomto souboru definuju skupinu, u≈æivatele, kte≈ô√≠ jsou v t√© skupinƒõ a dal≈°√≠ nastaven√≠ skupiny, jako nap≈ô√≠klad CI environment variables.

    Pr√°vƒõ spr√°va CI variables mƒõ p≈ôimƒõla k tomu zamyslet se jak m≈Ø≈æu Gitlab spravovat efektivnƒõji, proto≈æe spravovat ho ruƒçnƒõ je peklo.

    Uk√°zka konfiguace skupiny je:

    ```tf
    // group_www.tf
    resource "gitlab_group" "www" {
      name        = "www"
      path        = "www"
      visibility_level = "public"
    }

    # --- Members ---

    resource "gitlab_group_membership" "www_vojtechmares" {
      group_id     = gitlab_group.www.id
      user_id      = gitlab_user.vojtechmares.id
      access_level = "owner"
    }

    # --- Variables ---

    resource "gitlab_group_variable" "www_DEV_DOMAIN_SUFFIX" {
      group     = gitlab_group.www.id
      key       = "DEV_DOMAIN_SUFFIX"
      value     = "xsika.cz"
      protected = false
      masked    = false
    }
    ```

    ## Projekty

    A nakonec definice projektu. Velkou v√Ωhodou vytv√°≈ôen√≠ projektu Terraformem je, ≈æe je mo≈æn√© nastavit parametry, kter√© se mus√≠ manu√°lnƒõ nastavovat pro ka≈æd√Ω repozit√°≈ô manu√°lnƒõ, jako je nap≈ô√≠klad Fast-Forward Only merge strategie. Pokud pou≈æiju Terrafrom modul, nebo duplikuji konfiguraci p≈ôedchoz√≠ho projektu, m√°m jistotu, ≈æe nastaven√≠ je rovnou spr√°vn√©. Zde je uk√°zka `www/www` projektu v souboru `project_www_www.tf`:

    ```tf
    // project_www_www.tf
    resource "gitlab_project" "www_www" {
      namespace_id = gitlab_group.www.id
      name = "www"
      visibility_level = "public"
      merge_method = "ff"
      default_branch = "master"
      remove_source_branch_after_merge = true
    }
    ```

    ## Z√°vƒõr

    A teƒè u≈æ staƒç√≠ po ka≈æd√© √∫pravƒõ zavolat `terraform apply` a m√°me zmƒõny nasazen√©. Gitlab provider podporuje je≈°tƒõ mnoho dal≈°√≠ konfigurace, nap≈ô√≠klad integrace s Kubernetes, ale o tom p≈ô√≠≈°tƒõ.

    J√° beru mo≈ænost konfigurovat Gitlab deklarativn√≠ formou jako velk√© ≈°et≈ôen√≠ ƒçasu a mo≈ænost m√≠t p≈ôehled o aktu√°ln√≠m stavu, nav√≠c verzovan√Ω Gitem.

- id: emaily-jak-a-kam-je-odesilat
  title: "Emaily: Jak a kam je odes√≠lat"
  date: 30. 7. 2020
  tags:
    - email
    - development
  perex: |
    Poslat email z aplikace um√≠ ka≈æd√Ω. Poslat ho tak, aby to bylo u≈æivatel≈Øm p≈ô√≠jemn√©, to u≈æ ne. Zde V√°m uk√°≈æu jak to dƒõl√°m j√° a hlavnƒõ proƒç.
  content: |
    Proƒç p√≠≈°u tento blog post? Abych ulehƒçil u≈æivatel≈Øm pou≈æ√≠v√°n√≠ emailu, hlavnƒõ kdy≈æ maj√≠ filtry a automaticky je zpracov√°vaj√≠.

    ## Odes√≠l√°n√≠ emailu z v√≠ce adres

    Vƒõt≈°inou v≈°echny emaily odes√≠l√°me z `noreply@app.com` co≈æ by nevadilo, kdy≈æ bychom dali u≈æivateli mo≈ænost a≈• si v aplikaci nastav√≠ na jak√Ω email mu maj√≠ chodit z√°sadn√≠ akce na jeho √∫ƒçtu (nap≈ô√≠klad ≈ôe≈°it hesla), kam notifikace (kter√Ωch chod√≠ hodnƒõ), kam faktury a kam newsletter. To asi nedƒõl√°te, je≈°tƒõ se k tomu dostanu.

    Podstata je, ≈æe m√°me na klienta 1 email a tam pos√≠l√°me v≈°echno. Pokud v≈°e pos√≠l√°me z jednoho emailu, dƒõl√°me mu pot√≠≈æe s psan√≠m pravidel pro t≈ô√≠dƒõn√≠ p≈ô√≠choz√≠ch zpr√°v.

    Pojƒème mu to tedy zjednodu≈°it. J√° pou≈æ√≠v√°m tyto emaily pro odchoz√≠ po≈°tu ve vƒõt≈°inƒõ sv√Ωch aplikaci a mysl√≠m, ≈æe to funguje dob≈ôe.

    - `noreply-account@app.com` - D≈Øle≈æit√© zmƒõny na √∫ƒçtu, zmƒõna hesla, notifikace p≈ôihl√°≈°en√≠. V≈°e, co je d≈Øle≈æit√© dostat do inboxu
    - `noreply-notification@app.com` - Pro v≈°echny mo≈æn√© notifikace
    - `noreply-invoice@app.com` - Pro pos√≠l√°n√≠ faktur, d√° se jednodu≈°e p≈ôesmƒõrovat √∫ƒçetn√≠ nebo slu≈æbƒõ, kter√° je plat√≠ za V√°s
    - `noreply-newsletter@app.com` - Pro newsletter. Pokud si ho chce nƒõkdo d√°t do slo≈æky (a koukat do nich jen obƒças jako to dƒõl√°m j√°)

    Proƒç emaily pos√≠l√°m z r≈Øzn√Ωch email≈Ø a ne jen suffixu jako `noreply+account@app.com` a `noreply+newsletter@app.com` je i d≈Øvod, ≈æe nƒõkter√© emailov√© slu≈æby (jako [HEY.com](https://hey.com)), umo≈æ≈àuj√≠ dƒõlat jednoduch√Ω screening podle odes√≠latele a r≈Øzn√© from adresy jsou pro nƒõ nejlep≈°√≠.

    ## Odes√≠l√°n√≠ email≈Ø na r≈Øzn√© adresy

    V prvn√≠m odstavci jsem psal proƒç pos√≠l√°m emaily z r≈Øzn√Ωch adres. Z√°rove≈à nƒõkter√© emaily, typicky ty firemn√≠, nemaj√≠ mo≈ænost nastavov√°n√≠ filtru a proto je pro u≈æivatele p≈ô√≠jemn√©, kdy≈æ si m≈Ø≈æe nastavit emaily kam mu budou chodit r≈Øzn√© typy zpr√°v.

    J√° nech√°v√°m u≈æivateli nastavit si emaily pro stejn√© kategorie jako m√°m p≈ôi odes√≠l√°n√≠.

    ## Noreply, ale

    Pos√≠l√°n√≠ z `noreply@app.com` m√° z√°sadn√≠ nev√Ωhodu. Kdy≈æ m√° klient probl√©m, nem≈Ø≈æe napsat zpƒõt. J√° dƒõl√°m to, ≈æe u ka≈æd√©ho emailu, kter√Ω odch√°z√≠ automaticky z `noreply-*@app.com` d√°v√°m je≈°tƒõ __Reply-to__ na `support@app.com` a zajist√≠m tak, ≈æe zpƒõtnou komunikaci bude nƒõkdo ≈ôe≈°it.

    ## Z√°vƒõr

    Pokud navrhujete aplikaci, pro va≈°e u≈æivatele je konzistentn√≠ a p≈ôehledn√© pos√≠l√°n√≠ email≈Ø velk√Ω bonus. Github to m√° velmi pƒõknƒõ udƒõlan√©, bohu≈æel je to v√Ωjimka. I velc√≠ hr√°ƒçi jako Booking nebo PayPal v tom maj√≠ velk√Ω chaos a pravidla pro nƒõ se p√≠≈°ou velmi tƒõ≈æce (proto≈æe jsou p≈ôev√°≈ænƒõ z√°visl√© na fulltext search).

- id: docker-vs-podman-v-cem-se-lisi
  title: "Docker vs Podman: V ƒçem se li≈°√≠"
  date: 14. 6. 2020
  ad: docker
  tags:
    - docker
    - podman
  perex: |
    Hlavn√≠ rozd√≠ly mezi Dockerem a Podmanem
  content: |
    Docker i Podman jsou n√°stroje na pr√°ci s kontejnery. Podman je novƒõj≈°√≠ n√°stroj, kter√Ω kop√≠ruje UI Dockeru, ale v tom jak pracuj√≠ jsou z√°sadn√≠ rozd√≠ly.

    Docker bƒõ≈æ√≠ jako client/server, Docker client ≈ô√≠k√° serveru jak m√° vytv√°≈ôet kontejnery. Nam√≠sto toho Podman vytvo≈ô√≠ nov√Ω proces standardne (fork/exec), Podman tak√© um√≠ bƒõ≈æet pod non-root u≈æivatelem.

    Co se t√Ωk√° bezpeƒçnosti, Podman je lep≈°√≠. Pokud se nƒõkdo dostane k Docker socketu, je de facto root na serveru. Podman nem√° ≈æ√°dnou bƒõ≈æ√≠c√≠ komponetu, ka≈æd√Ω u≈æivatel vytv√°≈ô√≠ kontejnery ve sv√©m kontextu.

    ### Docker

    - Funguje na modelu client/server
    - Client m√° pro Linux, Mac i Windows, server bƒõ≈æ√≠ na Linuxu, v Macu a Windows je Linux VM v xHyve nebo Hyper-V
    - Podpora BuildKit
    - Kontejnery se pust√≠ po restartu serveru

    ### Podman

    - Nem√° bƒõ≈æ√≠c√≠ daemon
    - [M≈Ø≈æe bƒõ≈æet pod non-root u≈æivatelem](/blog/podman-docker-pod-non-root-uzivatelem)
    - Pou≈æ√≠v√° tradiƒçn√≠ fork/exec model

    Oba podporuj√≠ build images, i multistage. Podman v≈°ak nepodporuje BuildKit. S√≠≈•ov√°n√≠ maj√≠ podobnƒõ, ale ne stejnƒõ.

- id: podman-docker-pod-non-root-uzivatelem
  title: 'Podman: "Docker" pod non-root u≈æivatelem'
  date: 14. 6. 2020
  ad: docker
  tags:
    - docker
    - podman
  perex: |
    Podman je zp≈Øsob, jak spou≈°tƒõt (Docker) kontejnery pod non-root u≈æivatelem na Linuxu.
  content: |
    Podman je zp≈Øsob, jak spou≈°tƒõt (Docker) kontejnery pod non-root u≈æivatelem na Linuxu.

    Vytvo≈ô√≠me nap≈ô√≠klad u≈æivatele `podman`:

    ```
    useradd podman -m
    ```

    Povol√≠me `kernel.unprivileged_userns_clone`:

    ```
    sysctl kernel.unprivileged_userns_clone=1
    ```

    P≈ôepneme se do login shellu (d≈Øle≈æit√©) pomoc√≠:

    ```
    su - podman
    ```

    A m≈Ø≈æeme spou≈°tƒõt kontejnery:

    ```
    podman run hello-world
    ```

    ```
    podman run -d --name hello -p 8000:80 ondrejsika/go-hello-world:3
    ```

- id: weeknotes-4
  title: "Weeknotes #4"
  date: 7. 6. 2020
  tags:
    - weeknotes
    - kafemlejnek
  perex: |
    Gitlab CI, nat√°ƒçen√≠ podcastu a zkracovaƒç url
  content: |
    Ve st≈ôedu jsem byl nat√°ƒçet epizodu podcastu [Kafemlejnek.tv](https://kafemlejnek.tv) o Gitlab CI. Byl to m≈Øj prvn√≠ podcast (jako host), tak douf√°m, ≈æe se to povedlo. Uvid√≠me ƒçasem.

    D√°le pot≈ôebuji pro sv√© marketingov√© √∫ƒçely url zkracovaƒç, kter√Ω bude zkracovat url a bude sbirat co nejv√≠ce mo≈æn√Ωch informac√≠ o proklik√°ch jako (ƒças, HTTP referer, IP adresa, ..) a bude se rozumnƒõ generovat pomoc√≠ API. Nena≈°el jsem nic pou≈æiteln√©ho, tak jsem si jeden velmi jednoduch√Ω vytvo≈ôil. TODO: zdroj√°ky d√°t na Github.

- id: weeknotes-3
  title: "Weeknotes #3"
  date: 31. 5. 2020
  tags:
    - weeknotes
    - surge
    - static-sites
  perex: |
    Z√°pisky #weeknotes dal≈°√≠ho t√Ωdne od 25. do 31.5., ≈°kolen√≠, landing page a statick√Ω hosting surge.sh
  content: |
    V tomto t√Ωdnu jsem ≈°kolil a hodnƒõ pracoval na intern√≠ch vƒõcech. Zde je to nejd≈Øle≈æitƒõj≈°√≠ co jsem dƒõlal.

    Pracoval jsem spoleƒçnƒõ s Martinem a Zuzkou na nov√© Landing Page, na kterou budeme odkazovat nov√© kontakty. Design je od Matƒõje Kamenick√©ho. A je tam Nelinka (m≈Øj pes). V√Ωsledek je zde: [CZ](/hello) a [EN](https://ondrej-sika.com/hello).

    Rozhodl jsem se p≈ôesunout statick√© weby z Kubernetes a hledal jsem ide√°ln√≠ platformu, kde je provozovat. Rozhodoval jsem se mezi Vercel (d≈ô√≠ve Zeit), Cloudflare Workers, AWS S3 a Surge.sh.

    Nakonec jsem zvolil pro produkƒçn√≠ bƒõh Cloudflare Workers a pro testovac√≠ deploymenty Surge.sh. Na to t√©ma nap√≠≈°u obs√°hlej≈°√≠ ƒçl√°nek, proƒç jsem si vybral zrovna takto.

- id: weeknotes-2
  title: "Weeknotes #2"
  date: 24. 5. 2020
  tags:
    - weeknotes
    - devopslive
    - terraform
    - poste
  perex: |
    Z√°pisky #weeknotes dal≈°√≠ho t√Ωdne od 11. do 17.5. DevOps Live a dal≈°√≠ Terraform provider.
  content: |
    T√Ωden ubƒõhl a j√° zde sepisuji p√°r vƒõc√≠ co jsem za t√Ωden zvl√°dl.

    ### DevOps Live

    Rozhodl jsem se, ≈æe budu nat√°ƒçet livestreamy na t√©mata z DevOps.

    M≈Øj Tweet s dotazn√≠kem, kter√° t√©mata lid√≠ zaj√≠maj√≠, se pomƒõrnƒõ hodnƒõ roz≈°√≠≈ôil a j√° m√°m dostatek informac√≠ pro napl√°nov√°n√≠ prvn√≠ch livestream≈Ø.

    <Twitter tweet_id="1263402541292892160" />

    Tak≈æe na DevOps Live se m≈Ø≈æete tƒõ≈°it zaƒç√°tkem ƒçervna. Pokud si po≈ô√°d chcete vybrat t√©mata a nezme≈°kat live stream, m≈Ø≈æete vyplnit dotazn√≠ƒçek <https://forms.gle/gMQJc5qdib5t8B4QA> nebo zaƒç√≠t odeb√≠rat m≈Øj [Newsletter](https://sika.link/newsletter).

    ### Terraform Provider pro Poste.io

    Napsal jsem zat√≠m proof of concept Terraform provideru pro [Poste.io](https://poste.io) mail server. Zaƒç√≠n√°m s Training CRM a chci m√≠t rovnou v≈°echnu infrastrukturu v Terraformu.

    Pokud nezn√°te Poste.io, je to mail server v jednom Docker kontajneru. Poste.io obsahuje SMTP server, IMAP server, RoundCube, Web Admin, SSL pomoc√≠ Let's Encrypt a dal≈°√≠ komponenty. Je hroznƒõ jednoduch√Ω na instalaci, doporuƒçuji se na nƒõj pod√≠vat.

    M√° tak√© skvƒõl√© API, pro kter√© jsem p≈ôipravil knihovnu [poste-go](https://github.com/ondrejsika/poste-go), kterou pou≈æ√≠v√°m v Terraform provideru.

    Vytvo≈ôil jsem `terraform-provider-poste` a zaƒçal jsem s implementac√≠ dvou z√°kladn√≠ch funkc√≠, kter√© jsem pot≈ôeboval. P≈ôid√°v√°n√≠ dom√©n a vytv√°≈ôen√≠ mailboxu. Oboj√≠ bylo jednoduch√© a j√° tak mu≈æ≈Ø lehce spravovat moje mailboxy z Terraformu. Viz:

    ```terraform
    provider "poste" {
      origin = "https://poste.sikademo.com/admin/api"
      username = "admin@poste.sikademo.com"
      password = "asdfasdf"
    }

    resource "poste_domain" "foo_com" {
      name = "foo.com"
    }

    resource "poste_box" "foo_foo_com" {
      email = "foo@${poste_domain.foo_com.name}"
      password = "asdfasdf"
    }
    ```

    Zdrojov√© k√≥dy jsou samoz≈ôejmƒõ na Githubu, pomoc nebo n√°vrhy na zlep≈°en√≠ jsou v√≠tan√©.

    https://github.com/ondrejsika/terraform-provider-poste

- id: weeknotes-1
  title: "Weeknotes #1"
  date: 17. 5. 2020
  tags:
    - weeknotes
    - trainingcrm
    - pipedrive
    - terraform
    - vercel
  perex: |
    Zaƒç√≠n√°m ps√°t t√Ωdenn√≠ pozn√°mky #weeknotes. Zde je to co jsem dƒõlal v t√Ωdnu od 11. do 17.5.
  content: |
    ### Zaƒç√≠n√°m ps√°t Weeknotes

    K psan√≠ t√Ωdenn√≠ch pozn√°mek mƒõ inspiroval Honza Javorek (kter√©ho inspiroval Simon Willison). Pozn√°mky maj√≠ slou≈æit k:

    - zaznamen√°n√≠ toho, co jsem dƒõlal, abych nemƒõl pocit ≈æe se fl√°k√°m
    - zaznamen√°n√≠ toho, co jsem vy≈ôe≈°il a nauƒçil se - m≈Ø≈æe se to hodit i dal≈°√≠m

    Jsem s√°m na sebe zvƒõdav, jak svƒõdomit√Ω budu.

    ### Vercel

    Po nƒõjak√©m ƒçase jsem se vr√°til k Terraform Provideru pro ZEIT. Mezit√≠m se z ZEITu stal Vercel a tak jsem p≈ôedƒõlal n√°zvy a api ve v≈°ech m√Ωch projektech, kter√© s t√≠m Terraform providerem souvis√≠.

    Taky jsem p≈ôidal nƒõjakou dal≈°√≠ funkcionalitu (pr√°ce s DNS z√°znamy) do m√© knihovny `vercel-go`, kterou jsem vytvo≈ôil prim√°rnƒõ pro ten Terraform provider. A tak jsem ho koneƒçnƒõ na tu knihovnu napojil.

    - [ondrejsika/terraform-provider-vercel](https://github.com/ondrejsika/terraform-provider-vercel) - Terraform Provider pro Vercel
    - [ondrejsika/vercel-go](https://github.com/ondrejsika/vercel-go) - Go client pro Vercel API
    - [ondrejsika/vercel-api-mock](https://github.com/ondrejsika/vercel-api-mock) - Vercel API Mock

    ### TrainingCRM

    #### Integrace s Pipedrive

    O v√≠kendu jsem pracoval na TrainingCRM (m√©m intern√≠m CRM na spr√°vu ≈°kolen√≠), p≈ôev√°≈ænƒõ na jeho integrac√≠ s Pipedrive (to pou≈æ√≠v√°m pro obchod). TrainingCRM je psan√© v Djangu a hledal jsem nƒõjak√Ω rozumn√Ω Python Client pro Pipedrive a≈æ jsem si napsal vlastn√≠. Na Pypi bylo dokonce voln√© jm√©no `pipedrive` (co≈æ jsem neƒçekal), tak≈æe bal√≠ƒçek je zde <https://pypi.org/project/pipedrive/> a zdroj√°ky na Githubu <https://github.com/ondrejsika/pipedrive>

    #### TrainingCRM jako produkt

    TrainingCRM je moje ≈ôe≈°en√≠ probl√©m≈Ø jak spravovat √∫ƒçastn√≠ky na ≈°kolen√≠ch, spolupr√°ci se ≈°kol√≠c√≠mi agenturami, vypisov√°n√≠ term√≠n≈Ø a dal≈°√≠. Z√°rove≈à je to i formul√°≈ôov√Ω backend pro m√© jinak statick√© weby v Next.js. Kdy≈æ vid√≠m, jak firmy, se kter√Ωmi spolupracuji ≈ôe≈°√≠ cel√Ω proces ruƒçnƒõ a maj√≠ data po Execelech, rozhodl jsem se vƒõnovat tro≈°ku zdroj≈Ø a p≈ôemƒõnit m√© intern√≠ CRM do produktu. Z toho d≈Øvodu nen√≠ TrainingCRM open-source.

- id: ceph-persistent-volumes-v-kubernetes-pomoci-rook
  ad: kubernetes
  title: "Ceph Persistent volumes v Kubernetes pomoc√≠ Rook"
  date: 6. 4. 2020
  tags:
    - kubernetes
    - rook
    - ceph
    - storage
  perex: |
    Kubernetes je skvƒõl√° platforma na provozov√°n√≠ stateless aplikac√≠. Storage je ƒçasto ≈ôe≈°ena mimo Kubernetes cluster. Rook.io a Ceph je ultim√°tn√≠ ≈ôe≈°en√≠ pro perzistentn√≠ storage p≈ô√≠mo v Kubernetes clusteru.
  content: |
    Kubernetes je skvƒõl√° platforma na provozov√°n√≠ stateless aplikac√≠. Storage je ƒçasto ≈ôe≈°ena mimo Kubernetes cluster. Rook.io a Ceph je ultim√°tn√≠ ≈ôe≈°en√≠ pro perzistentn√≠ storage p≈ô√≠mo v Kubernetes clusteru.

    ## Co je CEPH
    Ceph je softwarovƒõ definovan√° distribuovan√° storage, kter√° podporuje block device (RBD), object storage s (AWS S3 interface) a Filesystem (CEPH F5). Skvƒõl√Ω n√°vod do Cephu je tato p≈ôedn√°≈°ka, od kamen√Ωch destiƒçek k distribuovan√© storage za m√©nƒõ ne≈æ hodinu: https://www.youtube.com/watch?v=7I9uxoEhUdY

    ## Co je to Rook

    Rook je sada Kubernetes oper√°tor≈Ø, kter√© v√Ωtv√°≈ô√≠ a spravuj√≠ storage v r√°mci Kubernetes Clusteru. Nejpou≈æ√≠vanƒõj≈°√≠ je Ceph, ale Rook podporuje i mnoho jin√Ωch typ≈Ø storage, nap≈ô√≠klad: NFS, Cassandra, ... P≈ôedn√°≈°ka o Rooku a Cephu na YouTube: https://www.youtube.com/watch?v=pNz0UyaqlE8

    ## Setup Infrastruktury

    Abychom mohli provozovat Ceph cluster, pot≈ôebujeme minim√°lnƒõ 3 Kubernetes nody s nejm√©nƒõ 4 GB RAM. Ka≈æd√Ω server mus√≠ m√≠t nainstalovan√© LVM (`apt install lvm2`) a nejake disky (eg: `/dev/sdb`), kter√© pou≈æije Ceph pro svoji storage. My si to vytvo≈ô√≠me pomoc√≠ Terraformu na DigitalOceanu. Rovnou si p≈ôiprav√≠me i loadbalancer, kter√Ω bude ukazovat na v≈°echny nody a nasmƒõ≈ôujeme na nƒõj nƒõjakou dom√©nu.

    M≈Ø≈æete pou≈æ√≠t moji uk√°zku z Githubu [ondrejsika/terraform-do-rook-ceph-example](https://github.com/ondrejsika/terraform-do-rook-ceph-example).

    Ta mi vytvo≈ô√≠ 3 servery s druh√Ωm diskem (30 GB):

    - rook0.sikademo.com
    - rook1.sikademo.com
    - rook2.sikademo.com

    a laodbalancer, kter√Ω ukazuje na v≈°echny tyto nody na adrese `rook.sikademo.com` s CNAME `*.rook.sikademo.com`.

    ## Instalace Kubernetes

    Nejd≈ô√≠v pot≈ôebujeme nainstalovat Kubernetes. M≈Ø≈æeme pou≈æ√≠t `kubeadmin` nebo Rancher. J√° jsem pou≈æil Rancher a postavil jsem cluster kde ka≈æd√Ω node je master i worker z√°rove≈à.

    ```
    rke up
    ```

    Po instalaci clusteru je≈°tƒõ nainstaluju [Traefik Ingress Controller](https://github.com/ondrejsika/kubernetes-ingress-traefik):

    ```
    kubectl apply -f https://k.sika.link/ingress.yml
    ```

    [k.sika.link](https://k.sika.link) je m≈Øj tool ([source](https://github.com/ondrejsika/k.sika.link)) na zkr√°cen√≠ cest z `raw.githubusercontent.com` abych nemusel pou≈æ√≠vat celou cestu `https://raw.githubusercontent.com/rook/rook/release-1.3/cluster/examples/kubernetes/ceph/common.yaml` ale jen `https://k.sika.link/rook-ceph-1.3/common.yaml`

    ## Instalace Rooku

    Rook budeme instalovat podle postupu z jejich webu, nejd≈ô√≠ve mus√≠me vytvo≈ôit custom resources a spustit oper√°tor.

    ```
    kubectl create -f https://k.sika.link/rook-ceph-1.3/common.yaml
    ```

    ```
    kubectl create -f https://k.sika.link/rook-ceph-1.3/operator.yaml
    ```

    Poƒçk√°me a≈æ nabƒõhnou v≈°echny tyto pody (`kubectl -n rook-ceph get po`):

    ```
    ondrej@sika-mac:~/Examples/rook (master)$ kubectl -n rook-ceph get po
    NAME                                  READY   STATUS    RESTARTS   AGE
    rook-ceph-operator-66d99fccf4-fpwj9   1/1     Running   0          50s
    rook-discover-5q8r4                   1/1     Running   0          28s
    rook-discover-7ng4s                   1/1     Running   0          28s
    rook-discover-dn6bj                   1/1     Running   0          28s
    ```

    ## Setup Ceph clusteru

    Jakmile nabƒõhne oper√°tor a rook discover, m≈Ø≈æete nasadit Ceph cluster.

    ```
    kubectl create -f https://k.sika.link/rook-ceph-1.3/cluster.yaml
    ```

    Poƒçk√°me dokud cluster nebude ready:

    ```
    ondrej@sika-mac:~/Examples/rook (master)$ kubectl -n rook-ceph get cephcluster
    NAMESPACE   NAME        DATADIRHOSTPATH   MONCOUNT   AGE     PHASE   MESSAGE                        HEALTH
    rook-ceph   rook-ceph   /var/lib/rook     3          4m26s   Ready   Cluster created successfully   HEALTH_OK
    ```

    ## Instalace Storage Class

    Abychom mohli vytv√°≈ôet vlastn√≠ PVC na Cephu, mus√≠me pro to vytvo≈ôit Storage Class

    Tu vytvo≈ô√≠me p≈ô√≠kazem:

    ```
    kubectl apply -f https://k.sika.link/rook-ceph-1.3/csi/rbd/storageclass.yaml
    ```

    Pokud vyp√≠≈°eme Storage Classes, tak ji uvid√≠me:

    ```
    ondrej@sika-mac:~/Examples/rook (master)$ kubectl get sc
    NAME              PROVISIONER                  RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE
    rook-ceph-block   rook-ceph.rbd.csi.ceph.com   Delete          Immediate           true                   46s
    ```

    Pokud m√°me jen jednu storage class, m≈Ø≈æeme ji nastavit jako defaultn√≠ p≈ô√≠kazem:

    ```
    kubectl patch storageclass rook-ceph-block -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
    ```

    ## Pou≈æ√≠t√≠ Storage Class

    Jako ukazku pou≈æ√≠t√≠ nainstalujeme p≈ôes Helm 3 Wordpress:

    ```
    helm repo add ondrejsika https://helm.oxs.cz
    ```

    ```
    ondrej@sika-mac:~/Examples/rook (master)$ helm upgrade --install hello ondrejsika/wordpress-mysql --set host=hello.rook.sikademo.com
    Release "hello" has been upgraded. Happy Helming!
    NAME: hello
    LAST DEPLOYED: Mon Apr  6 19:15:41 2020
    NAMESPACE: default
    STATUS: deployed
    REVISION: 4
    TEST SUITE: None
    NOTES:
    See: https://hello.rook.sikademo.com
    ```

    M≈Ø≈æeme kouknout, ≈æe se storage p≈ôipojili a pody bƒõ≈æ√≠:

    ```
    ondrej@sika-mac:~/Examples/rook (master)$ kubectl get po,pvc,pv
    NAME                                   READY   STATUS    RESTARTS   AGE
    pod/hello-mysql-0                      1/1     Running   0          14m
    pod/hello-wordpress-7fdb4565f8-d7dns   1/1     Running   0          12m

    NAME                                    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGE
    persistentvolumeclaim/hello-mysql       Bound    pvc-157cba57-822f-43a0-ac97-54ef699a1c47   1Gi        RWO            rook-ceph-block   14m
    persistentvolumeclaim/hello-wordpress   Bound    pvc-fd576f28-f9bd-475d-bceb-89e7eefca856   1Gi        RWO            rook-ceph-block   14m

    NAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                     STORAGECLASS      REASON   AGE
    persistentvolume/pvc-157cba57-822f-43a0-ac97-54ef699a1c47   1Gi        RWO            Delete           Bound    default/hello-mysql       rook-ceph-block            14m
    persistentvolume/pvc-fd576f28-f9bd-475d-bceb-89e7eefca856   1Gi        RWO            Delete           Bound    default/hello-wordpress   rook-ceph-block            14m
    ```

    Vidime, ≈æe v≈°echno jede. To je v≈°e. M≈Ø≈æeme se na n√°≈° Wordpress pod√≠vat na https://hello.rook.sikademo.com

- id: wireguard
  title: "Wireguard: N√°hrada IPSecu a OpenVPN v jednom"
  date: 4. 4. 2020
  tags:
    - wireguard
    - vpn
  perex: |
    Wireguard je extr√©mnƒõ jednoduch√° a rychl√° VPN. Vlastnƒõ n√°hrada IPSecu a OpanVPN v jednom. Bƒõ≈æ√≠ v≈°ude, v kernelu je jako network modul a m√° klienta pro Mac, iOS, Android, Windows ...
  content: |
    Na Wireguard u≈æ mƒõ p≈ôed nƒõjak√Ωm ƒçasem navedl Michael Kaplan a chci mu za to ve≈ôejnƒõ podƒõkovat. I p≈ôes poƒç√°teƒçn√≠ probl√©my (asi jako se v≈°√≠m) jsem Wireguard rozjel a je naprosto super.

    ## Co je Wireguard

    Wireguard je extr√©mnƒõ jednoduch√° a rychl√° VPN. Vlastnƒõ n√°hrada IPSecu a OpanVPN v jednom. Bƒõ≈æ√≠ v≈°ude, v kernelu je jako network modul a m√° klienta pro Mac, iOS, Android, Windows ...

    Pou≈æ√≠v√° modern√≠ kryptografii (jako SSH) a nepou≈æ√≠v√° ≈æ√°dn√© x509 certifik√°ty, prostƒõ jen ve≈ôejn√Ω a priv√°tn√≠ kl√≠ƒç. Konfigurace s√≠t√≠, jak na stranƒõ serveru, tak na stranƒõ klienta je velmi jednoduch√°. M≈Ø≈æete velmi jednodu≈°e nakonfigurovat jak√© rozsahy maj√≠ b√Ωt p≈ô√≠stupn√© z VPN na stranƒõ serveru a jak√Ω traffic m√° j√≠t p≈ôes VPN na stranƒõ klienta. A to v≈°e v jednom souboru `/etc/wireguard/wg0.conf`. Spou≈°t√≠ se pomoc√≠ jednoho p≈ô√≠kazu `wg-quick up wg0`. Velmi jednoduch√©.

    Podporuje tak√© roaming, m≈Ø≈æete mƒõnit IP adresu a st√°le komunikovat se zbytkem s√≠tƒõ. Hezky to napsal Petr Krƒçm√°≈ô v ƒçl√°nku na Rootu: https://www.root.cz/clanky/wireguard-moderni-a-snadno-pouzitelna-vpn-v-linuxovem-jadre/

    Super talk p≈ô√≠mo od autora Wireguardu na Youtube: https://www.youtube.com/watch?v=eYztYCbV_8U

    ## Setup Wireguardu

    Pojƒème si uk√°zat jak Wireguard nakonfigurovat. M√°me VPN server na IP adrese `vpn.sikademo.com`, firemn√≠ s√≠≈• `192.168.100.0/24` kde m√°me server s klientem k VPN na adrese `192.168.100.101`. D√°le m√°me notebook a telefon, kter√© chceme tak√© do VPN p≈ôipojit.

    Budu pou≈æ√≠vat VPN server na Debian 10, kde je wireguard v repozit√°≈ô√≠ch. Na firemn√≠ s√≠ti tak√© pobƒõ≈æ√≠ Debian 10, na notebooku m√°m Mac a telefon IPhone.

    ### Instalace

    Na serverech nainstaluju bal√≠ƒçky `wireguard` a `resolvconf`.

    ```
    apt update && apt install -y wireguard resolvconf
    ```

    Na Macu nainstaluju Wireguard z [Mac App Store](https://apps.apple.com/us/app/wireguard/id1451685025), stejnƒõ tak na iPhone z [App Store](https://apps.apple.com/us/app/wireguard/id1441195209).

    Pokud chci i wireguard tools, mus√≠m je nainstalovat pomoc√≠ brew

    ```
    brew install wireguard-tools
    ```

    ## Setup Serveru

    Na serveru (`vpn.sikademo.com`) si vytvo≈ô√≠m konfiguraƒçn√≠ soubor `/etc/wireguard/wg0.conf` s t√≠mto obsahem:

    ```
    [Interface]
    Address = 10.10.0.1/24
    ListenPort = 51820
    PrivateKey = Vpn/Priv=

    PostUp = iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --clamp-mss-to-pmtu
    PostUp = ip6tables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --clamp-mss-to-pmtu
    PostUp = iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    PostUp = ip6tables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    PostUp = iptables -A FORWARD -i %i -j ACCEPT
    PostUp = ip6tables -A FORWARD -i %i -j ACCEPT
    PostUp = sysctl -q -w net.ipv4.ip_forward=1
    PostUp = sysctl -q -w net.ipv6.conf.all.forwarding=1

    PostDown = sysctl -q -w net.ipv4.ip_forward=0
    PostDown = sysctl -q -w net.ipv6.conf.all.forwarding=0
    PostDown = iptables -D FORWARD -i %i -j ACCEPT
    PostDown = ip6tables -D FORWARD -i %i -j ACCEPT
    PostDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
    PostDown = ip6tables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
    PostDown = iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --clamp-mss-to-pmtu
    PostDown = ip6tables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --clamp-mss-to-pmtu

    [Peer]
    PublicKey = Office/Pub=
    PresharedKey = Office/Preshared=
    AllowedIPs = 10.10.0.101/32, 192.168.100.0/24

    [Peer]
    PublicKey = Mac/Pub=
    PresharedKey = Mac/Preshared=
    AllowedIPs = 10.10.0.201/32

    [Peer]
    PublicKey = Phone/Pub=
    PresharedKey = Phone/Preshared=
    AllowedIPs = 10.10.0.202/32
    ```

    Interface popisuje jak vypad√° interface wg0, co je standardn√≠ interface. Adresa `10.10.0.1/24` je adresa na VPN s√≠ti a port `51820` je standardn√≠ UDP port kde Wireguard poslouch√°. D√°le je tam priv√°tn√≠ kl√≠ƒç (v m√© uk√°zce nevalidn√≠ placeholder `Server/Private=`), kter√Ω vygenerujete p≈ô√≠kazem `wg genkey`. V skeci post up / post down je nastaven√≠ forwardu a masquarade.

    Pak jsou na definice jednotliv√Ωch klient≈Ø, peeru. Budeme m√≠t 3 klienty: server v kancel√°≈ôi, poƒç√≠taƒç a telefon. Klienti jsou definov√°ni pouze jejich ve≈ôejn√Ωm kl√≠ƒçem, ≈æ√°dn√© certifik√°ty nejsou pot≈ôeba.

    Prvn√≠ klient (office) m√°m v allowed IPs tak√© rozsah s√≠tƒõ v kancel√°≈ôi abychom se na ni z VPN dostali.

    Konfigrurce klient≈Ø jsou jednodu≈°≈°√≠, takhle vypad√° konfiguraƒçn√≠ soubor na klientovi v kancel√°≈ôi:

    ```
    [Interface]
    PrivateKey = Priv/Office=
    Address = 10.10.0.100/32
    DNS = 1.1.1.1

    PostUp = sysctl -w net.ipv4.ip_forward=1
    PostUp = iptables -A FORWARD -i wg0 -j ACCEPT
    PostUp = iptables -A FORWARD -o wg0 -j ACCEPT
    PostUp = iptables -t nat -A POSTROUTING -o wg0 -j MASQUERADE
    PostUp = iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

    PostDown = sysctl -w net.ipv4.ip_forward=0
    PostDown = iptables -D FORWARD -i wg0 -j ACCEPT
    PostDown = iptables -D FORWARD -o wg0 -j ACCEPT
    PostDown = iptables -t nat -D POSTROUTING -o wg0 -j MASQUERADE
    PostDown = iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

    [Peer]
    PublicKey = Vpn/Pub=
    PresharedKey = Office/Preshared=
    AllowedIPs = 10.10.0.0/24
    Endpoint = vpn.sikademo.com:51820
    PersistentKeepalive = 25
    ```

    Klinet m√° zase priv√°tn√≠ kl√≠ƒç (kter√Ω m√° server v peeru) a v peeru m√° ve≈ôejn√Ω kl√≠ƒç VPN serveru. D√°le m√° adresu `10.10.0.100/32` na VPN a DNS nastaven√© na Cloudflare (nƒõco jako `8.8.8.8` od Google).

    V Peeru m√° potom pouze VPN server kam se p≈ôipojuje.

    Co se t√Ωk√° konfigurace na Macu a iPhone, je to je≈°tƒõ jednodu≈°≈°√≠.

    ```
    [Interface]
    PrivateKey = Mac/Priv=
    Address = 10.10.0.201/24
    DNS = 1.1.1.1

    [Peer]
    PublicKey = Vpn/Pub=
    PresharedKey = Mac/Preshared=
    AllowedIPs = 10.10.0.0/24, 192.168.100.0/24
    Endpoint = vpn.sikademo.com:51820
    PersistentKeepalive = 25
    ```

    Na Macu ani na iPhone u≈æ nen√≠ pot≈ôeba PostUp/PostDown, tak≈æe konfigurace je je≈°tƒõ p≈ô√≠moƒça≈ôej≈°√≠. Kdy≈æ se pod√≠v√°me do AllowedIPs, je tam kromƒõ s√≠tƒõ VPN tak√© adresa sitƒõ v kancel√°≈ôi, co≈æ n√°m ≈ô√≠k√°, ≈æe packety smƒõ≈ôuj√≠c√≠ do kancel√°≈ôe maj√≠ j√≠t skrz VPN.

    Pokud chceme aby v≈°echen traffic byl skrz VPN, nastav√≠me `AllowedIPs = 0.0.0.0/0, ::/0`.

    Konfigrurce na telefonu vypad√° velice podobnƒõ

    ```
    [Interface]
    PrivateKey = Phone/Priv=
    Address = 10.10.0.202/24
    DNS = 1.1.1.1

    [Peer]
    PublicKey = Vpn/Pub=
    PresharedKey = Phone/Preshared=
    AllowedIPs = 10.10.0.0/24, 192.168.100.0/24
    Endpoint = vpn.sikademo.com:51820
    PersistentKeepalive = 25
    ```

    ## Start

    Kdy≈æ chceme na Linuxu Wireguard zapnout, staƒç√≠ n√°m k tomu `wg-quick up wg0`. `wg0`, co je n√°zev interface a z√°rove≈à jm√©no souboru v `/etc/wireguard/`. Pokud jej chceme vypnout, pou≈æijeme `wg-quick down wg0`. V p≈ô√≠padƒõ pot≈ôeby spou≈°tƒõn√≠ p≈ôi startu syst√©mu je ide√°ln√≠ pou≈æ√≠t `systemctl enable wg-quick@wg0`, t√≠mto zapneme slu≈æbu. T√≠mto p≈ô√≠kazem `systemctl start wg-quick@wg0` slu≈æbu spust√≠me, a t√≠mto p≈ô√≠kazem zase zjist√≠me status slu≈æby `systemctl status wg-quick@wg0` Pokud soubor zmƒõn√≠me, mus√≠me v≈ædy Wiregurd vypnout a pak zapnout.

    Na Macu a v telefonu to znamen√° jen p≈ôipojit se do profilu VPN.

    A je to. Wireguard je hodnƒõ robustn√≠, tak≈æe i kdy≈æ se spojen√≠ rozv√°≈æe, dok√°≈æe si ho velmi rychle nav√°zat zpƒõt bez nutnosti interakce.

    ## Shrnut√≠

    S Wireguardem m√°m velmi pozitivn√≠ zku≈°enost, u≈æ jej pou≈æ√≠v√°m na v≈°ech sv√Ωch projektech produkƒçnƒõ a ≈æ√°dn√° chyba. Rozhodnƒõ je to nƒõco co stoj√≠ za vyzkou≈°en√≠ a mysl√≠m si, ≈æe si jej zamilujete (i ti, kdo nesn√°≈°√≠ VPN a s√≠tƒõ jako j√°).

    ## Zdroje

    - https://www.wireguard.com/
    - https://www.linode.com/docs/networking/vpn/set-up-wireguard-vpn-on-ubuntu
    - https://staaldraad.github.io/2017/04/17/nat-to-nat-with-wireguard/
    - https://www.ericlight.com/wireguard-part-two-vpn-routing.html
    - https://www.youtube.com/watch?v=eYztYCbV_8U
    - https://github.com/burghardt/easy-wg-quick

- id: coronavirus-outbreak
  nostatic: true
  title: Coronavirus üò∑ü¶†
  date: 17. 3. 2020
  tags: []
  perex: |
    Coronavirus m√© ≈°kolen√≠ nezastav√≠, ≈°kol√≠m d√°l, ale on-line. P≈ôes Zoom, Google Hangouts, Whereby nebo GoToWebinar.
  content:
- id: australia-on-fire
  nostatic: true
  title: Pomozte Austr√°lii üê®ü¶ò‚ù§Ô∏è
  date: 6. 1. 2020
  tags: []
  perex: |
    P≈ôispƒõte na pomoc Austr√°lii, dostanete slevu na ≈°kolen√≠ nebo konzultaci ve v√Ω≈°i daru.
  content:
- id: novinky2020
  title: Novinky v roce 2020
  date: 1. 1. 2020
  tags: []
  perex: |
    Tento ƒçl√°nek je vlastnƒõ shrnut√≠ toho co jsem do teƒè dƒõlal a tak√© jak√© vƒõci pl√°nuji. Je toho opravdu hodnƒõ. ƒål√°nek jsem poslal tak√© jako m≈Øj prvn√≠ newsletter v roce 2020.
  content: |
    Tento ƒçl√°nek je vlastnƒõ shrnut√≠ toho co jsem do teƒè dƒõlal a tak√© jak√© vƒõci pl√°nuji. Je toho opravdu hodnƒõ. ƒål√°nek jsem poslal tak√© jako m≈Øj prvn√≠ newsletter v roce 2020.

    - [Kompletn√≠ DevOps Pipeline](#kompletn--devops-pipeline)
    - [Nov√© kurzy do roku 2020](#nov√©-kurzy-do-roku-2020)
      - [Terraform](#terraform)
      - [Prometheus](#prometheus)
      - [ELK / EFK](#elk---efk)
      - [Proxmox](#proxmox)
      - [React & Next.js](#react---next-js)
    - [ƒål√°nky z roku 2019](#-l-nky-z-roku-2019)
    - [Videokurzy](#videokurzy)
    - [Trainera](#trainera)
    - [Meetupy](#meetupy)

    ## Kompletn√≠ DevOps Pipeline

    Od teƒè nab√≠z√≠m ≈°kolen√≠ a konzultace cel√© DevOps pipeline na open source stacku.

    ≈†kol√≠m tyto technologie, kter√© na sebe kr√°sn√© navazuj√≠ a tvo≈ô√≠ ucelen√Ω DevOps proces:

    Verzovani v Gitu, spr√°va repozit√°≈ô≈Ø v Gitlabu. Nasazov√°n√≠ aplikac√≠ v Dockeru do Kubernetes, automaticky pomoc√≠ Gitlab CI. Spr√°va infrastruktury pomoc√≠ Terraformu a konfigurace pomoc√≠ Ansible. Spr√°va logu v ELK / EFK a monitoring pomoc√≠ Promethea.

    ## Nov√© kurzy do roku 2020

    Do roku 2020 jsem si p≈ôipravil nov√© kurzy na termata __Terraform__, __Prometheus__ a __ELK / EFK__. D√°le dƒõl√°m kurzy __Proxmoxu__ s Michaelem Kaplanem a __React & Next.js__ se Zuzkou Jeschke.

    #### Terraform

    Terraform V√°m usnad≈àuje spravovat infrastrukturu jako k√≥d. To znamen√° v Gitu a se v≈°√≠m co k tomu pat≈ô√≠. Merge / Pull Requesty, code review, forky a dal≈°√≠. Spr√°va va≈°√≠ infrastruktury (public a private cloud) se stane jednodu≈°≈°√≠ a mnohem p≈ôehlednƒõj≈°√≠.

    Zaj√≠m√° V√°s Terraform? V√≠ce na str√°nce [≈†kolen√≠ Terraform](/skoleni/terraform)

    #### Prometheus

    Na Kubernetes navazuj√≠ dal≈°√≠ t√©mata: monitoring a spr√°va logu. Monitoring a metriky n√°m obstar√°v√° Prometheus. Je to graduated project (stejnƒõ jako Kubernetes) pod CNCF.io a je velmi pƒõknƒõ integrovateln√Ω s modern√≠mi aplikacemi jako je Kubernets, Traefik, CAdvisor (monitoring Dockeru). Je to robustn√≠ syst√©m na sb√≠r√°n√≠ metrik a monitoring.

    V√≠ce na str√°nce [≈†kolen√≠ Prometheus](/skoleni/prometheus)

    #### ELK / EFK

    Jako druh√Ω n√°stroj navazuj√≠c√≠ na Kubernetes je ELK nebo Elastic Stack. Je to sada n√°stroj≈Ø na spr√°vu logu: Elastisticsearch (storage), Logstash / Fluentd (log parsing), Kibana (dashboard). Do ELK stacku m≈Ø≈æete agregovat logy nejen z Kubernetes, ale ve≈°ker√© va≈°e logy. Budete m√≠t full text index nad logy a mnohem jednodu≈°≈°√≠ pr√°ci s nimi.

    V√≠ce na str√°nce [≈†kolen√≠ ELK / EFK](/skoleni/elk). Kurz bude k dispozici zaƒç√°tkem √∫nora.

    #### Proxmox

    Proxmox je virtulizaƒçn√≠ platforma pou≈æ√≠vaj√≠c√≠ KVM (Kernel Virtual Machines). Je to velmi dobr√° open source alternativa k VMware, kter√° poskytuje, live migrace VMs, z√°lohov√°n√≠, snapshoty a mnoho dal≈°√≠ho. M√° tak√© integrovanou podporu distribuovan√© storage CEPH.

    ≈†kolen√≠ dƒõl√°m j√° a Michael Kaplan. V√≠ce na str√°nce [Proxmox](/skoleni/proxmox)

    #### React & Next.js

    Kromƒõ DevOps hodnƒõ pracuj√≠ s Reactem a Next.js. Proto jsme se [Zuz](https://zuzjes.com) rozhodli p≈ôipravit tak√© ≈°kolen√≠ Reactu. Na ≈°kolen√≠ intenz√≠vnƒõ pracujeme.

    V√≠ce informac√≠ bude na str√°nce [≈†kolen√≠ React & Next.js](/skoleni/react). ≈†kolen√≠ dƒõl√°m j√° a [Zuzana Jeschke](https://zuzjes.com). Kurz bude k dispozici zaƒç√°tkem √∫nora.

    ## ƒål√°nky z roku 2019

    Zaƒçal jsem tak√© ps√°t ƒçl√°nky, ty nejzaj√≠mavƒõj≈°√≠ jsou zde:

    - [Novinky v Helm 3](/blog/helm3) (blog post)
    - [Spr√°va Cloudflare DNS pomoc√≠ Terraformu](/terraform/sprava-cloudflare-dns-pomoci-terraformu)
    - [Git Rebase](/git/rebase)
    - [Git Hooks](/git/hooks)
    - [Docker s TLS](/docker/docker-s-tls)
    - [Proƒç by ka≈æd√Ω mƒõl m√≠t svoji dom√©nu](/clanky/proc-by-kazdy-mel-mit-svoji-domenu/)
    - [Proƒç m√≠t email na vlastn√≠ dom√©nƒõ](/clanky/proc-mit-email-na-vlastni-domene)


    ## Videokurzy

    P≈ôipravuji video verze m√Ωch nejpopul√°rnƒõj≈°√≠ch ≈°kolen√≠: Docker, Kubernetes, Terraform a Gitlab CI. Budou k dispozici koncem Ledna. V√≠ce informac√≠ je na str√°nce [Videokurzy](/videokurzy).

    Ka≈ædy videokurz obsahuje √∫vod do dan√© technologie a step-by-step lekce jak ≈ôe≈°it konkr√©tn√≠ probl√©my a jak s n√°strojem efektivnƒõ pracovat. Videokurzy m√°m za zav√°dƒõc√≠ cenu 3000 CZK za kurz za osobu, p≈ôi koupi v≈°ech ƒçty≈ô najednou je cena 3200 CZK.

    Pokud jej chcete koupit do firmy cena videokurzu je 10 000 CZK pro v≈°echny zamƒõstnance.

    Opakov√°n√≠ je matka moudrosti, pokud jste u mƒõ mƒõli ≈°kolen√≠ na dan√© t√©ma, kurz m√°te se slevou 50% ƒçili za 5000 CZK pro firmu.

    ## Trainera

    Zalo≈æil jsem firmu Trainera s.r.o., pod kterou zaƒç√≠n√°me dƒõlat ≈°kolen√≠ pro vƒõt≈°√≠ spoleƒçnosti a ve vƒõt≈°√≠m teamu. Po≈ô√°d z≈Øst√°v√°m jako freelancer a po≈ô√°d V√°m jsem schopn√Ω konzultovat a ≈°kolit DevOps s√°m, ale m√°m po sv√Ωch kurzech vƒõt≈°√≠ popt√°vku ne≈æ st√≠h√°m obslou≈æit a proto jsem zalo≈æil firmu abych nemusel v√Ωraznƒõ zdra≈æit a zamƒõ≈ôit se jen na banky a velk√© korporace. Roz≈°i≈ôuj√≠ team a sna≈æ√≠m se ve v√≠ce lidech ≈°kolit ve stejn√© √∫rovni v jak√© jsem ≈°kolil do teƒè. Dr≈æte mi palce.

    M≈Ø≈æete se pod√≠vat na nab√≠dku kurz≈Ø od [Trainera.io](http://trainera.io), ale je to zat√≠m de facto to co nab√≠z√≠m j√°. Pokud chcete spolupracovat v√Ωhradnƒõ se mnou, nic se pro V√°s nemƒõn√≠.

    ## Meetupy

    Jako dal≈°√≠ v√Ωzvu jsem bral pomoc komunitƒõ a chtƒõl jsem ƒç√°st sv√Ωch znalosti p≈ôedat d√°l. Proto jsem zalo≈æil meetup group v Salzburgu. Proƒç Salzburg? R√°d jezd√≠m do hor a nemƒõli tam DevOps meetupy, tak je Salzburg spojen√≠ p≈ô√≠jemn√©ho s u≈æiteƒçn√Ωm.

    ### Salzburg DevOps Meetups

    Na Meetups m√°me 30 lid√≠ a v √∫noru pl√°nujeme prvn√≠ meetup o Dockeru a Kubernetes.

    V√≠ce na [meetup.com/Salzburg-DevOps-Meetups](https://www.meetup.com/Salzburg-DevOps-Meetups/)

    ## Z√°vƒõrem bych r√°d podƒõkoval

    V√°m za dosavadn√≠ spolupr√°ci a V√°≈° z√°jem. Budu se sna≈æit zlep≈°ovat DevOps a procesy v IT firm√°ch nejen v ƒåesk√© Republice. D√≠ky, ≈æe jste se mnou.

    S√°m bych v≈°echno co jsem zde sepsal urƒçitƒõ nezvl√°dl. A ani bych se nedostal do stavu v kter√©m jsem teƒè. Chtƒõl bych t√≠mto podƒõkovat m√©mu teamu za obrovsk√© √∫sil√≠, kter√© vynalo≈æili.

    Jmenovitƒõ Martinovi Jurƒçovi ([jurco.io](https://jurco.io)), kter√Ω mi mana≈æuje operations vƒçetnƒõ klient≈Ø a marketingu. Martin mi skvƒõle nastavil firemn√≠ procesy, udƒõlal migraci z naprost√©ho punku do CRM (kter√° mƒõ bolela, ale mus√≠m si p≈ôiznat ≈æe p≈ôinesla sv√© ovoce) a ≈ô√≠d√≠ v≈°e co nemus√≠m dƒõlat j√°. J√° se d√≠ky tomu mohu naplno vƒõnovat technick√Ωm vƒõcem a ≈°kolen√≠m. Pokud budete pot≈ôebovat poradit s podobn√Ωmi vƒõcmi, zkuste po≈æ√°dat Martina.

    D√°le bych r√°d podƒõkoval Zuzce ([zuzjes.com](https://zuzjes.com)), p≈ô√≠telkyni, kter√° mƒõ ne jen podporovala, ale udƒõlala hromadu pr√°ce na webech v Reactu.

    D√≠ky tak√© pat≈ô√≠ K√°tƒõ, kter√° mi pom√°hala s obecnou agendou a ≈ôe≈°ila za mƒõ √∫koly, na kter√© jsem nemƒõl ƒças ani chu≈•.

    A≈• se V√°m da≈ô√≠ v roce 2020

    ![PF 2020](/content/pf2020_800px.jpg)

- id: errli
  title: err.li - Url zkracovaƒç na odkazy z chyb na Github
  date: 31. 12. 2019
  tags:
    - git
    - github
  perex: |
    Projekt inspirovan√Ω err.sh od ZEITu na jednoduch√© vkl√°d√°n√≠ odkazu na chyby z repozit√°≈ôe do chybov√Ωch v√Ωstupu.
  content: |
    Spr√°vn√© vysvƒõtlen√≠ chyb je z√°klad. Bohu≈æel ne v≈ædy se cel√Ω popis vejde do chybov√©ho v√Ωstupu. Na≈°tƒõst√≠ m≈Ø≈æeme vlo≈æit odkaz na popis chyby. Kde ty popisy m√≠t ulo≈æen√©? Ide√°lnƒõ v Gitu. Ale odkazy na Githubu jsou dlouh√©, zkracovat jeden po druh√©m nen√≠ moc re√°ln√©.

    Co s t√≠m? S n√°padem p≈ôi≈°li lid√≠ z [ZEIT.co](https://zeit.co) a napsali [err.sh](https://err.sh), kter√Ω dƒõl√° to, ≈æe odk√°≈æe na konkr√©tn√≠ popis chyby v dan√©m repozit√°≈ôi. Nap≈ô√≠klad <https://err.sh/micro/path-missing> smƒõ≈ôuje na <https://github.com/zeit/micro/blob/master/errors/path-missing.md>.

    Nƒõco takov√©ho jsem udƒõlal i j√° na sv√©m [err.li](https://err.li).

    Mƒõ to odkazuje takto:

    - `err.li/[user]/[repo]/[error]` -> `github.com/[user]/[repo]/blob/master/errors/[error].md`
    - `err.li/[repo]/[error]` -> `err.li/ondrejsika/[repo]/[error]`
    - `err.li/[error]` -> `err.li/ondrejsika/errors/[error]`

    Funguje to √∫plnƒõ stejnƒõ, jen implementace je tro≈°ku jin√°. Err.sh pou≈æ√≠v√° Node.js microservice ([source](https://github.com/zeit/err-sh)), j√° pouze funkcionalitu ZEIT.co ([now.json](https://github.com/ondrejsika/err.li/blob/master/now.json)).

    Uk√°zka m√©ho projektu zde: https://err.li/tf.sh/state-is-locked

    #### Odkazy

    - err.li home page - https://err.li
    - err.sh blog post - https://zeit.co/blog/err-sh
    - err.li source code - https://github.com/ondrejsika/err.li
    - err.sh source code - https://github.com/zeit/err-sh
- id: helm3
  title: Helm 3, Tillerless Helm
  date: 14. 11. 2019
  ad: kubernetes
  tags:
    - kubernetes
    - helm
  perex: |
    Helm3! Koneƒçnƒõ! Tillerless Helm verze 3 je tady a tohle je jeho kr√°tk√° recenze na z√°kladƒõ jeho pou≈æ√≠v√°n√≠.
  content: |
    __Helm__ asi zn√°te, je to bal√≠ƒçkovac√≠ nastro pro __Kubernetes__. Ted ale p≈ôi≈°el z√°sadn√≠ release v podobƒõ verze 3 a j√° V√°m uk√°≈æu novinky a rozd√≠ly oproti p≈ôedchoz√≠ verzi, kter√© mƒõ zaujali.

    ### Tillerless Helm
    Nejvƒõt≈°√≠ a asi i nejoƒçek√°vanƒõj≈°√≠ novinkou je to ≈æe Helm 3 u≈æ je ƒçistƒõ client, nepot≈ôebuje se instalovat do clusteru (Tiller). Pro mƒõ je to skvƒõl√° zpr√°va a mo≈ænost zaƒç√≠t pou≈æ√≠vat Helm na plno.

    D≈ô√≠ve jsem Helm pou≈æ√≠val prim√°rnƒõ jako Template engine, proto≈æe jsem nasazoval t√≠mto stylem:

    ```bash
    helm template ./helm/myapp --name myapp.cz --set host=myapp.cz | kubectl apply -f -
    ```

    V√Ωhodou byla absence nutnosti Tilleru (ƒç√°sti Helmu bƒõ≈æ√≠c√≠ v clusteru) a nev√Ωhodou bylo to ≈æe se to nechovalo jako jeden bal√≠ƒçek a po≈ô√°d jsem to musel spravovat ruƒçnƒõ (pomoc√≠ `kubectl`). Dal≈°√≠ nev√Ωhodou bylo to ≈æe helm neumƒõl vyrenderovat template z bal√≠ƒçku v repozitari, tak√© jsem musel m√≠t zdrojaky souƒç√°st√≠ repozitare, kter√Ω z Gitlab CI nasazoval, anebo nƒõjak sta≈æen√©.

    To se teƒè mƒõn√≠. Mu≈æ≈Ø pou≈æ√≠vat Helm i jako spr√°vƒõ nasazen√Ωch aplikaci.

    ### Nasazov√°n√≠ p≈ô√≠mo z Helmu

    Kdy≈æ nasazuj√≠ p≈ô√≠mo z Helmu, m√°m nƒõkolik mo≈ænosti a vasechny jsou pƒõknƒõ:

    #### Podle Chartu

    ```
    helm repo add ondrejsika https://helm.oxs.cz
    helm install hello ondrejsika/one-image --set hello.k8s.sikademo.com
    ```

    #### Ze zdroje Chartu

    ```
    helm install hello2 ./helm/one-image --set hello2.k8s.sikademo.com
    ```

    #### Z archivu Chartu

    ```
    helm install hello3 ./one-image.tgz --set hello3.k8s.sikademo.com
    ```

    #### Z archivu Chartu na webu

    ```
    helm install hello4 https://helm.oxs.cz/one-image-1.1.1.tgz --set hello4.k8s.sikademo.com
    ```

    #### Z Chartu ve specifick√©m repozitari

    ```
    helm install hello5 --repo https://helm.oxs.cz one-image --set hello5.k8s.sikademo.com
    ```

    ### Helm Upgrade

    P≈ô√≠kaz `helm upgrade` se chov√° stejnƒõ jako ve verzi 2, ale d√≠ky nov√© struktu≈ôe `helm install` to cel√© d√°v√° vƒõt≈°√≠ smysl. Z√°rove≈à po≈ô√°d funguje parametr `--install` tazke m≈Ø≈æete po≈ô√°d pou≈æ√≠vat klasick√Ω install upgrade, co≈æ je obdoba `helm template ... | kubectl apply ...`.

    ```
    helm upgrade --install nginx ondrejsika/one-image --set image=nginx --set host=nginx.k8s.sikademo.com
    ```

    a samotn√Ω upgrade:

    ```
    helm upgrade nginx ondrejsika/one-image --set image=nginx:alpine --set host=nginx.k8s.sikademo.com
    ```

    ### Helm Uninstall m√≠sto Helm Delete

    Helm 3 m√° p≈ô√≠kaz `helm uninstall`, kter√Ω nahrazuje `helm delete redis --purge`. Po odinstalov√°n√≠ m≈Ø≈æete rovnou nasadit nov√Ω chart pod stejn√Ωm jm√©nem.

    Pokud chcete zachovat historii (d≈ô√≠ve bez parametr≈Ø `--purge`), teƒè mus√≠te p≈ôidat parametr `--keep-history`

    ### Helm Status

    P≈ô√≠kaz `helm status` neukazuje resources jak jsme byli zvykl√≠ z Helm 2, je to sp√≠≈° feature ne≈æ bug, ale podle diskuze na [Githubu](https://github.com/helm/helm/issues/5952) se tam mo≈æn√° tato funkcionalita vr√°t√≠.

    D√° se to vy≈ôe≈°it pomoc√≠ tƒõchto zp≈Øsobu:

    ```
    helm get manifest hello | kubectl get -f -
    ```

    Nebo na to Marc Khouzam napsal plugin do Helmu, kter√Ω vyp√≠≈°e jak status tak ten `kubectl get ...`. Staƒç√≠ nainstalovat:

    ```
    helm plugin install https://github.com/marckhouzam/helm-fullstatus
    ```

    A pustit:

    ```
    helm fullstatus hello
    ```

    ### Ostatn√≠ zmƒõny v CLI

    - `helm init` je odstranƒõn, nen√≠ pot≈ôeba ;)
    - `helm inspect` -> `helm show`
    - `helm fetch` -> `helm pull`

    ### Z√°vƒõr

    Helm 3 je jednoznaƒçnƒõ super, splnil v≈°echny mƒõ oƒçek√°v√°n√≠. Mysl√≠m, ≈æe ≈ôada lid√≠ nechtƒõla pou≈æ√≠vat Helm kv≈Øli Tilleru, teƒè u≈æ to nen√≠ d≈Øvod. Helm 3 pou≈æ√≠v√°m u≈æ nƒõjakou dobu jako beta & RC a jsem s n√≠m naplno spokojen√Ω.

    ### Zdroje

    - https://helm.sh/blog/helm-v3-beta/
    - https://github.com/helm/helm/issues/5952

- id: javadays2019
  title: Docker & Kubernetes Talk @ JavaDays 2019
  ad: docker
  date: 12. 11. 2019
  perex: |
    Slides a ukazka kodu z me prednasky o Dockeru a Kubernetes.
  content: |

    Slides z prednasky na Speaker Deck: <https://speakerdeck.com/ondrejsika/introduction-to-docker-and-kubernetes-at-javadays-2019>

    Ukazkovy projekt: [ondrejsika/javadays2019](https://github.com/ondrejsika/javadays2019)

    Pokud se Vam prednaska libila budu rad kdyz o ni tweetnetes s `@ondrejsika` a `#javadayscz`. Diky.

    Zajima Vas Docker nebo Kubernetes? Muzete si objednat moje [Skoleni Dockeru](/skoleni/docker) a [Skoleni Kubernetes](/skoleni/kubernetes) nebo prijit na nejaky [otevreny termin](/verejne-terminy)

- id: terraform-prednaska-linuxdays-2019
  url: /blog/2019/terraform-prednaska-linuxdays-2019
  title: Terraform prednaska na LinuxDays 2019
  ad: terraform
  date: 6. 10. 2019
  perex: |
    Slides, video a ukazka kodu z me prednasky o Terraformu.
  content: |

    Slides z prednasky na Speaker Deck: <https://speakerdeck.com/ondrejsika/terraform-infrastructure-as-a-code>

    Ukazkovy projekt: [ondrejsika/linuxdays2019-terraform](https://github.com/ondrejsika/linuxdays2019-terraform)

    Video zaznam na YouTube: <https://www.youtube.com/watch?list=PLlTxFw5y5UZtIUJgYb-aEcjV21x8TGgLx&v=-u4OOoJd6ck>

    Zajima Vas Terraform? Muzete prijit na moje [Skoleni Terraformu](/skoleni/terraform)

- id: react-next-workshop-linuxdays-2019
  url: /blog/2019/react-next-workshop-linuxdays-2019
  title: React & Next.js Workshop na LinuxDays 2019
  date: 5. 10. 2019
  ad: react
  perex: |
    Dnes jsem mel workshop na LinuxDays, zde jesou materialy a ukazkovy projekt.
  content: |
    "Slides" pro workshop: [ondrejsika/linuxdays2019-react](https://github.com/ondrejsika/linuxdays2019-react)

    Ukazkovy projekt: [ondrejsika/linuxdays2019-react--example](https://github.com/ondrejsika/linuxdays2019-react--example)

    Nestihli jste workshop na LinuxDays? Nevadi, muzete prijit na moje [Skoleni Reactu](/skoleni/react)

- id: terminy-skoleni-podzim-2019
  url: /blog/2019/terminy-skoleni-podzim-2019
  title: Terminy skoleni na podzim 2019
  date: 4. 10. 2019
  perex: |
    Mate zajem o nejake me skoleni? Zde jsou terminy do konce roku 2019.
  content: |
    Tento rok uz mam skoro cely vybookovany a tak nabizim terminy, kdy mam vypsane verejne terminy, kam se muzete prihlasit pripadne, kam muzete poslat Vase vyvojare. Vypsane mam terminy Dockeru, Kubernetes a Gitlab CI, muzete se podivat na stranku [Verejne Terminy](/verejne-terminy). Pokud mate zajem o jiny kurz, napiste mi mail a domluvime se.

- id: mac-os-vs-debian-i3
  url: /blog/2019/mac-os-vs-debian-i3
  title: Mac OS vs Debian + i3
  date: 5. 2. 2019
  perex: |
    Chci si koupit Mac. Uz po ƒçtvrt√© jej testuji. Mam iPhone, iPad, Apple Watch, Apple TV. Dlouho si ≈ô√≠kam, zda by pro me nebyl i MacOS. P≈ôedchoz√≠ t≈ôi pokusy byli neuspƒõ≈°n√©, na Mac se mi nepoda≈ôilo p≈ôej√≠t. Ted to zkou≈°√≠m po ƒçtvrt√©.
  content: |
    Chci si koupit Mac. Uz po ƒçtvrt√© jej testuji. Mam iPhone, iPad, Apple Watch, Apple TV. Dlouho si ≈ô√≠kam, zda by pro me nebyl i MacOS. P≈ôedchoz√≠ t≈ôi pokusy byli neuspƒõ≈°n√©, na Mac se mi nepoda≈ôilo p≈ôej√≠t. Ted to zkou≈°√≠m po ƒçtvrt√©.

    Chtƒõl bych zjistit zda to p≈Øjde. Zaƒçnu t√≠m, proƒç bych na Mac p≈ôe≈°el. Nebudu teƒè ≈ôe≈°it cenu, ta je sice vy≈°≈°√≠, ale jsem ochotny ji zaplatit.

    ### V√Ωhody Macu
    - Synchronizace mezi za≈ô√≠zen√≠mi &#8211; Telefon, Poƒç√≠taƒç
    - Funkƒçn√≠ tisk√°rny, wifi, projektor, &#8230;
    - Unifikovan√© kl√°vesov√© zkratky (skrz aplikace, skrz za≈ô√≠zen√≠)
    - Hotspot

    ### V√Ωhody Debianu s i3
    - Efektivn√≠ window manger (i3)
    - Nativn√≠ Docker
    - Mnohem vƒõt≈°√≠ v√Ωkon za lep≈°√≠ cenu

    ### Nev√Ωhody Macu
    - Naprosto stra≈°n√° pr√°ce s okny kl√°vesnici
    - Minim√°ln√≠ velikost oken

    ### Nev√Ωhody Debianu s i3
    - P≈ôipojen√≠ monitoru
    - Tisk√°rny

    #### Window Manager i3

    Tohle je asi nejd≈Øle≈æitƒõj≈°√≠ vƒõc, proƒç jsem nikdy nep≈ôe≈°el na Mac. i3 je prostƒõ naprosto dokonal√Ω, skvƒõle se ovl√°d√°, perfektnƒõ pracuje s v√≠ce monitory. Nem√°m k nƒõmu ≈æ√°dnou v√Ωhradu.

    #### Wifi Hotspot
    Na Macu je skvƒõle sd√≠len√≠ internetu z iPhone a iPadu do Macu. Otev≈ôu Mac, kliknu na ikonu Wifi a vyberu si, zda chci internet z telefonu nebo iPadu. Nemus√≠m nic vynd√°vat z kapes a pou≈°tƒõt hotspot. Prostƒõ to funguje.

- id: emaily-v-jedne-domene-na-google-i-na-svem-serveru
  url: /blog/2019/emaily-v-jedne-domene-na-google-i-na-svem-serveru
  title: Emaily v jedn√© dom√©nƒõ na Google i na sv√©m serveru
  date: 10. 1. 2019
  perex: |
    Chci si koupit Mac. U≈æ pot≈ôet√≠ jej testuji. M√°m iPhone, iPad, Apple Watch, Apple TV. Dlouho si ≈ô√≠k√°m, zda by pro mƒõ nebyl i MacOS. P≈ôedchoz√≠ dva pokusy byly ne√∫spƒõ≈°n√©, na Mac se mi nepoda≈ôilo p≈ôej√≠t. Teƒè to zkou≈°√≠m pot≈ôet√≠.
  content: |
    Je mo≈æn√© m√≠t emaily v jedn√© dom√©nƒõ jako ondrej@example.com na G Suite a monitoring@example.com na sv√©m server≈Ø? Ano, jde a nen√≠ to tƒõ≈æk√©.

    Pou≈æ√≠v√°m G Suite z mnoha d≈Øvod≈Ø. Je to stabiln√≠ email, kter√Ω funguje i kdy≈æ zbytek m√© infrastruktury spadne, doruƒçuje se do inboxu a nemus√≠m ≈ôe≈°it spam listy, m√°m na Google kalend√°≈ô, kontakty a G Suite. To jsou asi hlavn√≠ d≈Øvody, proƒç jej pou≈æ√≠v√°m.

    Na druhou stranu, email √∫ƒçet stoj√≠ 4 EUR mƒõs√≠ƒçnƒõ a po≈°tu si organizuji do v√≠ce √∫ƒçt≈Ø. Dƒõl√°m to zase z v√≠ce d≈Øvod≈Ø. Dob≈ôe se mi s t√≠m pracuje a nƒõkter√© emaily chci sd√≠let a nƒõkter√© ne. Nechci tak√© stahovat v≈°echny emaily na mobilu, zvl√°≈°≈• ty, kter√© nemus√≠m ≈ôe≈°it akutnƒõ a chod√≠ jich hodnƒõ. Stejnƒõ tak mi vad√≠ filtrov√°n√≠ Googlim zp≈Øsobem narozd√≠l od standartniho Sieve. Nen√≠ to mo≈æn√° nejlep≈°√≠ zp≈Øsob, ale mƒõ vyhovuje.

    Dejme tomu, ≈æe pou≈æ√≠v√°m dom√©nu example.com. Pou≈æ√≠vat email ondrej@example.com jako hlavn√≠, ondrejsika@example.com na vƒõt≈°inu slu≈æeb a webu (jako nap≈ô√≠klad ondrejsika+alza@example.com nebo ondrejsika+netflix@example.com), monitoring@example.com pro notifikace z monitoringu, wp@example.com pro notifikace z Worpresu a podobnƒõ.

    Jeliko≈æ Google chce za ka≈æd√Ω √∫ƒçet v G Suite 4 EUR, platil bych zbyteƒçnƒõ moc za slu≈æby, kter√© nechci. U tƒõchto email≈Ø nemus√≠m ≈ôe≈°it ani spam, vƒõt≈°inou z nich nic nepos√≠l√°m.

    Moje dosavadn√≠ ≈ôe≈°en√≠ bylo na sv√©m serveru m√≠t dom√©nu int.example.com (int jako internal) a na n√≠ m√≠t tyto emaily (nap≈ô√≠klad ondrejsika@int.example.com, wp@int.example.com).

    Toto ≈ôe≈°en√≠ se mi nakonec p≈ôestalo l√≠bit. Povedlo se mi toti≈æ doc√≠lit toho, ≈æe emaily mohu m√≠t v hezk√©m form√°tu (ondrejsika@example.com, wp@example.com) a nepou≈æ√≠vat v√≠ce √∫ƒçt≈Ø v G Suite. Uk√°≈æu V√°m, jak na to.

    Provozuji vlastn√≠ emailov√Ω server Poste.io. Je to jeden Docker kontejner, kter√Ω obsahuje SMTP, IMAP, webmail a Admin. Vytvo≈ôili to ƒçe≈°i, je to fakt super. V nƒõm jsem si vytvo≈ôil virtu√°ln√≠ dom√©nu example.com, na kter√© si vytv√°≈ô√≠m jednotliv√© √∫ƒçty. D√°le jsem si vytvo≈ôil dom√©nu gin.example.com (Google INput, podobnost s alkoholem n√°hodn√°), kterou jsem p≈ôesmƒõroval na example.com, co≈æ znamen√°, ≈æe v≈°echny emaily pro √∫ƒçty na gin.example.com se budou doruƒçovat do schr√°nek v dom√©nƒõ example.com. Pou≈æ√≠v√° se to nap≈ô√≠klad, kdy≈æ m√°te alias dom√©ny s pomlƒçkou a chcete doruƒçovat emaily na obƒõ dom√©ny (nap≈ô√≠klad ondrej@my-domain.com -> ondrej@mydomain.com, alice@my-domain.com -> alice@mydomain.com).

    MX DNS z√°znamy dom√©ny example.com nech√°m na Google a MX pro gin.example.com nastav√≠m na m≈Øj mailserver. Vypad√° to asi takto:

        sika@sika-x250:~$ host example.com
        example.com mail is handled by 10 aspmx.l.google.com.
        example.com mail is handled by 20 alt1.aspmx.l.google.com.
        sika@sika-x250:~$ host gin.example.com
        gin.example.com mail is handled by 10 mail.example.com.
        sika@sika-x250:~$

    V G Suite nastav√≠m m√©mu u≈æivateli aliasy pro tyto jm√©na (ondrejsika@example.com, wp@example.com) nebo dom√©nov√Ω ko≈° (akceptuje v≈°echny emaly (cokoliv@example.com). Potom nastav√≠m p≈ôesmƒõrov√°n√≠ tƒõchto emailu na emaily v gin.example.com dom√©nƒõ, (kter√° je internƒõ doruƒçuje na example.com). Poste.io nedƒõl√° DNS resilution pro dom√©ny, se kter√Ωmi pracuje a proto se nepod√≠v√°, ≈æe example.com m√° b√Ωt na Google, ale email doruƒç√≠ lok√°ln√≠mu √∫ƒçtu. A to je cel√©. Staƒç√≠ p≈ôidat nov√© emaily do mailov√©ho klienta.

    Pokud m√°m spr√°vnƒõ nastaven√© SPF, mohu emaily z dom√©ny i odes√≠lat a ano, budou ve slo≈æce odeslan√° po≈°ta.
- id: talk-gitlab-ci-docker-linux-days-2018
  url: /blog/2018/talk-gitlab-ci-docker-linux-days-2018
  title: |
    Talk: Gitlab CI + Docker (Linux Days 2018)
  date: 6. 10. 2018
  ad: gitlab-ci
  perex: |
    Slidy k p≈ôedn√°≈°ce a workshopu na Linux Days 2018.
  content: |
    DOPLNIT SLIDY
    Repozitar: https://github.com/ondrejsika/linuxdays2018
    Resources:

    Setup of Gitlab Runner in Docker: [https://github.com/ondrejsika/gitlab-ci-runner](https://github.com/ondrejsika/gitlab-ci-runner)
    Run Traefik with SSL: [https://github.com/ondrejsika/traefik-ssl](https://github.com/ondrejsika/traefik-ssl)
    Docker image sikalabs/ci: [https://github.com/sikalabs/sikalabs-container-images/tree/master/ci](https://github.com/sikalabs/sikalabs-container-images/tree/master/ci)
- id: talk-uvod-do-pouzivani-dockeru-teched-2018
  url: /blog/2019/talk-uvod-do-pouzivani-dockeru-teched-2018
  ad: docker
  title: |
    Talk: √övod do pou≈æ√≠v√°n√≠ Dockeru, TechEd 2018
  date: 16. 5. 2018
  perex: |
    Slidy a zdroj√°ky z m√© p≈ôedn√°≈°ky na konferenci TechEd 2018.
  content: |
    DOPLNIT SLIDY

    Demo: https://github.com/ondrejsika/teched18
    Slides: https://speakerdeck.com/ondrejsika/teched-2018-introduction-to-docker
- id: talk-automatizace-pomoci-gitlab-gi-a-dockeru
  url: /blog/2018/talk-automatizace-pomoci-gitlab-gi-a-dockeru
  title: |
    Talk: Automatizace pomoc√≠ Gitlab CI a Dockeru
  date: 21. 4. 2018
  perex: Slides z p≈ôedn√°≈°ky na DevHeaven.
  content: |
    Zdroje:
    - [https://github.com/ondrejsika/jekyll-demo](https://github.com/ondrejsika/jekyll-demo)
    - [https://github.com/ondrejsika/traefik-ssl](https://github.com/ondrejsika/traefik-ssl)
    - [https://github.com/ondrejsika/gitlab-ci-runner](https://github.com/ondrejsika/gitlab-ci-runner)
    - [https://github.com/ondrejsika/ondrejsika-ci-docker](https://github.com/ondrejsika/ondrejsika-ci-docker)

    Mate zajem o skoleni [Dockeru](/), [Gitu](/) nebo [CI](/)?

- id: plzensky-barcamp-lightning-network-aneb-bitcoin-2.0
  url: .blog/2018/plzensky-barcamp-lightning-network-aneb-bitcoin-2.0
  title: |
    Plzensky Barcamp: Lightning Network aneb Bitcoin 2.0
  date: 7. 4. 2018
  perex: |
    Slidy a zdroj√°ky k demo uk√°zce LN na Plze≈àsk√©m Barcampu.
  content: |
    Slides a zdroj√°ky k demo uk√°zce LN na Plze≈àsk√©m Barcampu.
    Zdrojov√© k√≥dy uk√°zky:  [https://github.com/ondrejsika/lightning-example](https://github.com/ondrejsika/lightning-example)
    Slides v PDF: [https://speakerd.s3.amazonaws.com/‚Ä¶/Lightning_Network_aneb_Bitcoin_2.0.pdf](https://speakerd.s3.amazonaws.com/‚Ä¶/Lightning_Network_aneb_Bitcoin_2.0.pdf)

    DOPLNIT SLIDY

- id: tunelovani-git-konfigurace-na-server-prez-ssh-aneb-konec-commitum-root-root@debian
  url: /blog/2018/tunelovani-git-konfigurace-na-server-prez-ssh-aneb-konec-commitum-root-root@debian
  title: Tunelovani GIT konfigurace na server prez SSH aneb konec commitum root root@debian
  date: 21. 3. 2018
  ad: git
  perex: |
    Urƒçitƒõ se v√°m nƒõkdy stalo, ≈æe jste nƒõco commitovali na serveru a do historie jste si zavlekly nƒõco jako: commit 8f160534070012c87c409e5b19028ad0062f0310 Author: root <root@debian> Date: Wed Jun 26 17:16:31 2013 +0000 blocks.pickle, peers.pickle added to .gitignore commit 96e83891bfdcad41c545220e1957fba1ba72c2cd Author: root&#8230;
  content: |
    Urcite se vam nekdy stalo, ze jste neco commitovali na serveru a do historie jste si zavlekly neco jako:

    ```
    commit 8f160534070012c87c409e5b19028ad0062f0310
    Author: root <root@debian>
    Date: Wed Jun 26 17:16:31 2013 +0000
    blocks.pickle, peers.pickle added to .gitignore
    ```
    Asi to znate. Ale nastavit uzivatele a email na serveru neni nejlepsi reseni, protoze muze pristupovat vice lidi a kazdy chce vytvaret commity pod svym jmenem.

    ### SSH forward promƒõnn√Ωch
    Resenim muze byt posilani environment promenych po SSH. Vyzaduje to sice zmenu nastaveni SSH serveru, ale je to jediny zpusob, jak nastavit prostredi Gitu automaticky pro konkretniho uzivatele.
    #### Na lokalnim pocitaci
    Na stranƒõ klienta mus√≠me m√≠t v bashrc vyexportovan√© promƒõnn√©, kter√© nastavuj√≠ v Gitu jm√©no a email pro autora i commitera. Jsou to tyto promƒõnn√©:

        export GIT_AUTHOR_NAME="Ondrej Sika"
        export GIT_AUTHOR_EMAIL="ondrej@ondrejsika.com"
        export GIT_COMMITTER_NAME=$GIT_AUTHOR_NAME
        export GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL

    a je jestƒõ nutn√© tyto promƒõnn√© pos√≠lat p≈ôi SSH spojen√≠. To se d√° glob√°lnƒõ povolit v SSH konfigu (.ssh/config) takto:
        Host *
            SendEnv GIT_*
    A to je na stranƒõ klienta v≈°e.
    #### Na serveru
    Na server≈Ø je nutn√© povolit p≈ôij√≠m√°n√≠ env promƒõnn√Ωch Gitu. Do souboru /etc/ssh/sshd_config je nutn√© p≈ôidat n√°sleduj√≠c√≠ ≈ô√°dku:
    ```
    AcceptEnv GIT_*
    ```
    A pak jen restartovat SSH server (service ssh restart), odpojit a p≈ôipojit se znovu. Zda v≈°e zafungovalo, zjist√≠te kdy≈æ si vyp√≠≈°ete promƒõnn√© prost≈ôed√≠ pomoc√≠:
    ```
    root@debian:~# env | grep GIT
    GIT_COMMITTER_NAME=Ondrej Sika
    GIT_COMMITTER_EMAIL=ondrej@ondrejsika.com
    GIT_AUTHOR_NAME=Ondrej Sika
    GIT_AUTHOR_EMAIL=ondrej@ondrejsika.com
    ```
    Ted uz vse funguje, dalsi commit na serveru bude uz se spravnym autorem.

- id: python-libraries-for-bitcoin-and-ethereum-pycon-sk-2018
  url: /blog/2018/python-libraries-for-bitcoin-and-ethereum-pycon-sk-2018
  title: Python Libraries for Bitcoin and Ethereum (PyCon SK 2018)
  date: 10. 3. 2018
  perex: |
    Slidy z p≈ôedn√°≈°ky o knihovn√°ch pro pr√°ci s Bitcoinem a Ethereem z PyCon SK 2018
  content: |
    Slidy z p≈ôedn√°≈°ky o knihovn√°ch pro pr√°ci s Bitcoinem a Ethereem z PyCon SK 2018

    VLOZIT SLIDY

    Code examples: [https://github.com/ondrejsika/examples‚Äìbitcoin-ethereum-python-tools](https://github.com/ondrejsika/examples‚Äìbitcoin-ethereum-python-tools)

    Slides in PDF: [PDF](/)

- id: i3‚Äìtiling-window-manager-install-fest-2018
  url: /blog/2018/i3‚Äìtiling-window-manager-install-fest-2018
  title: i3 ‚Äì tiling window manager (Install Fest 2018)
  date: 3. 3. 2018
  perex: |
    Slidy z m√© p≈ôedn√°≈°ky o i3 windows manageru.
  content: |
    Slidy z m√© p≈ôedn√°≈°ky o i3 windows manageru.

    VLOZIT SLIDY

    My i3 config: https://github.com/ondrejsika/i3-config

    Slides: [https://speakerdeck.com/ondrejsika/i3-tiling-window-manager-install-fest-2018](https://speakerdeck.com/ondrejsika/i3-tiling-window-manager-install-fest-2018)<br/>
    Slides [PDF]: [https://speakerd.s3.amazonaws.com/‚Ä¶/Install_Fest_2018_-_i3wm.pdf](https://speakerd.s3.amazonaws.com/presentations/0b309db6aa8140fd897065dd25d04f61/Install_Fest_2018_-_i3wm.pdf)

- id: jake-knapp-sprint
  url: /blog/2018/jake-knapp-sprint
  title: |
    Jake Knapp: Sprint
  date: 18. 2. 2018
  perex: |
    Pr√°vƒõ jsem doƒçetl kn√≠≈æku Sprint od lid√≠ z Google Ventrures. Kdy≈æ jsem si kn√≠≈æku kupoval, myslel jsem si, ≈æe si kupuji n√°vod, jak ryche udƒõlat nƒõjak√Ω projekt. Ale o tom kn√≠≈æka v≈Øbec nen√≠ ‚Ä¶ Kniha Sprint popisuje, jak otestovat n√°pad‚Ä¶
  content: |
    Pr√°vƒõ jsem doƒçetl kn√≠≈æku Sprint od lid√≠ z Google Ventrures. Kdy≈æ jsem si kn√≠≈æku kupoval, myslel jsem si, ≈æe si kupuji n√°vod, jak ryche udƒõlat nƒõjak√Ω projekt. Ale o tom kn√≠≈æka v≈Øbec nen√≠ ‚Ä¶<br/>

    Kniha Sprint popisuje, jak otestovat n√°pad za t√Ωden. A n√°pad m≈Ø≈æe b√Ωt jakkoliv bl√°zniv√Ω. Vlastnƒõ, ƒç√≠m bl√°znivƒõj≈°√≠, t√≠m je to t√©ma vhodnƒõj≈°√≠ pro sprint. Riskuji vlastnƒõ jen t√Ωden a v p√°tek budu m√≠t hmatateln√© v√Ωsledky, zda m≈Øj projekt m≈Ø≈æe fungovat ƒçi nikoliv.<br/>

    V kn√≠≈æce se dozv√≠te, jak n√°pad vhodnƒõ zvolit, jak na nƒõm v teamu pracovat, vytvo≈ôit prototyp a vyzkou≈°et na z√°kazn√≠c√≠ch. Je nutn√° trocha p≈ôedstavivosti, ale sprintem m≈Ø≈æete testovat prakticky v≈°echno. Od navr≈æen√≠ prodejny nebo ordinace, p≈ôes software nebo weby a≈æ po hardwarov√© produkty.<br/>

    Mnoh√© techniky z knihy se daj√≠ pou≈æ√≠t i mimo t√Ωdenn√≠ sprint, t≈ôeba kdy≈æ pot≈ôebujete spoleƒçnƒõ nƒõco vymyslet. Jsou lep≈°√≠ metody ne≈æ brainstorming ‚Äì ten podle autor≈Ø v≈Øbec nefunguje. Tak√© kvalitiativn√≠ rozhovory se z√°kazn√≠ky jsou velmi zaj√≠mav√° oblast.<br/>

    U≈æ se tƒõ≈°√≠m a≈æ sprint nebo nƒõjakou jeho ƒç√°st ƒçi upravenou variantu, (i kdy≈æ to p≈ô√≠li≈° nedoporuƒçuji) vyzkou≈°√≠m na nƒõjak√©m re√°ln√©m projektu. P≈ôem√Ω≈°l√≠m i o pou≈æit√≠ ve skautsk√©m odd√≠lu. A≈æ si udƒõl√°m osobn√≠ zku≈°enost se sprintem, jak ho popisuj√≠ v knize, urƒçitƒõ o tom nap√≠≈°i.<br/>

    R√°d knihu p≈Øjƒç√≠m: [https://distlib.com/ondrejsika/169/](https://distlib.com/ondrejsika/169/)<br/>
    Nebo ji m≈Ø≈æete zakoupit: [https://www.melvil.cz/kniha-sprint/](https://www.melvil.cz/kniha-sprint/)
- id: prednaska-o-dockeru-ve-zline-8-2-2018
  url: /blog/2018/prednaska-o-dockeru-ve-zline-8-2-2018
  ad: docker
  title: |
    P≈ôedn√°≈°ka o Dockeru ve Zl√≠nƒõ 8. 2. 2018
  date: 8. 2. 2018
  perex: |
  content: |
- id: prednaska-o-dockeru-v-olomouci-30-1-2017
  url: /blog/2018/prednaska-o-dockeru-v-olomouci-30-1-2017
  title: |
    P≈ôedn√°≈°ka o Dockeru v Olomouci 30. 11. 2017
  date: 30. 11. 2017
  perex: |
  content: |
